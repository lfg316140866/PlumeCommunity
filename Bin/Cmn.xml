<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cmn</name>
    </assembly>
    <members>
        <member name="T:Cmn.AES">
            <summary> 
            AES加密
            </summary> 
        </member>
        <member name="F:Cmn.AES.Keys">
            <summary>
            默认密钥向量
            </summary>
        </member>
        <member name="M:Cmn.AES.Encode(System.String,System.String)">
            <summary>
            AES加密字符串
            </summary>
            <param name="encryptString">待加密的字符串</param>
            <param name="encryptKey">加密密钥,要求为8位</param>
            <returns>加密成功返回加密后的字符串,失败返回源串</returns>
        </member>
        <member name="M:Cmn.AES.Decode(System.String,System.String)">
            <summary>
            AES解密字符串
            </summary>
            <param name="decryptString">待解密的字符串</param>
            <param name="decryptKey">解密密钥,要求为8位,和加密密钥相同</param>
            <returns>解密成功返回解密后的字符串,失败返源串</returns>
        </member>
        <member name="T:Cmn.DES">
            <summary> 
            DES加密
            </summary> 
        </member>
        <member name="M:Cmn.DES.Encode(System.String,System.String)">
            <summary>
            DES加密字符串
            </summary>
            <param name="encryptString">待加密的字符串</param>
            <param name="encryptKey">加密密钥,要求为8位</param>
            <returns>加密成功返回加密后的字符串,失败返回源串</returns>
        </member>
        <member name="M:Cmn.DES.Decode(System.String,System.String)">
            <summary>
            DES解密字符串
            </summary>
            <param name="decryptString">待解密的字符串</param>
            <param name="decryptKey">解密密钥,要求为8位,和加密密钥相同</param>
            <returns>解密成功返回解密后的字符串,失败返源串</returns>
        </member>
        <member name="T:Cmn.Base64">
            <summary>
            Base64加密解密类
            </summary>
        </member>
        <member name="M:Cmn.Base64.Encode(System.String)">
            <summary>
            Base64加密
            </summary>
            <param name="encryptString">字符串</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Base64.Decode(System.String)">
            <summary>
            Base64解密
            </summary>
            <param name="decryptString">字符串</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Cls.Thread.Start">
            <summary>
            启动线程
            </summary>
        </member>
        <member name="M:Cmn.Cls.Thread.Stop">
            <summary>
            停止线程
            </summary>
        </member>
        <member name="M:Cmn.Cls.Thread.IsAlive">
            <summary>
            判断线程是否还在运行
            </summary>
            <returns></returns>
        </member>
        <member name="P:Cmn.Cls.Thread.Interval">
            <summary>
            执行的间隔时间默认为3000毫秒，单位为毫秒
            </summary>
        </member>
        <member name="T:Cmn.Valid">
            <summary>
            数据类型验证类
            </summary>
        </member>
        <member name="M:Cmn.Valid.isIP(System.String)">
            <summary>
            是IP类型否
            </summary>
            <param name="input">字符串</param>
            <returns>是/否</returns>
        </member>
        <member name="M:Cmn.Valid.IsNumeric(System.String)">
            <summary>
            是数值否
            </summary>
            <param name="input">字符串</param>
            <returns>是/否</returns>
        </member>
        <member name="M:Cmn.Valid.IsInt(System.String)">
            <summary>
            是整数否
            </summary>
            <param name="input">字符串</param>
            <returns>是/否</returns>
        </member>
        <member name="M:Cmn.Valid.isEmail(System.String)">
            <summary>
            是Email否
            </summary>
            <param name="input">字符串</param>
            <returns>是/否</returns>
        </member>
        <member name="M:Cmn.Valid.isUrl(System.String)">
            <summary>
            是Url否
            </summary>
            <param name="input">字符串</param>
            <returns>是/否</returns>
        </member>
        <member name="M:Cmn.Valid.isZip(System.String)">
            <summary>
            是邮编否
            </summary>
            <param name="input">字符串</param>
            <returns>是/否</returns>
        </member>
        <member name="M:Cmn.Valid.isSSN(System.String)">
            <summary>
            是身份证否
            </summary>
            <param name="input">字符串</param>
            <returns>是/否</returns>
        </member>
        <member name="M:Cmn.Valid.isDateTime(System.String)">
            <summary>
            是日期否
            </summary>
            <param name="input">字符串</param>
            <returns>是/否</returns>
        </member>
        <member name="M:Cmn.Valid.isUsableUserName(System.String)">
            <summary>
            是否是可用用户名
            </summary>
            <param name="input">字符串</param>
            <returns>是/否</returns>
        </member>
        <member name="M:Cmn.Valid.isTime(System.String)">
            <summary>
            是否短时间类型
            </summary>
            <param name="input">字符串</param>
            <returns>是/否</returns>
        </member>
        <member name="M:Cmn.Valid.isNumber(System.String)">
            <summary>
            判断给定的字符串(strNumber)是否是数值型
            </summary>
            <param name="strNumber">要确认的字符串</param>
            <returns>是则返加true 不是则返回 false</returns>
        </member>
        <member name="M:Cmn.Valid.isPhone(System.String)">
            <summary>
            是否是手机
            </summary>
            <param name="str">要确认的字符串</param>
            <returns>是则返加true 不是则返回 false</returns>
        </member>
        <member name="T:Cmn.Cls.getPager">
            <summary>
            生成分页SQL代码
            </summary>
        </member>
        <member name="M:Cmn.Cls.getPager.#ctor">
            <summary>
            构造器
            </summary>
        </member>
        <member name="M:Cmn.Cls.getPager.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            构造器
            </summary>
            <param name="tblName">表名</param>
            <param name="fldKey">主键</param>
            <param name="fldFields">字段名</param>
            <param name="PageSize">页大小</param>
            <param name="PageIndex">当前页</param>
            <param name="strWhere">条件</param>
            <param name="strOrder">排序</param>
            <param name="orderType">1ASC/2DESC排序类型</param>
            <param name="doCount">不等0时是否输出记录数 </param>
        </member>
        <member name="M:Cmn.Cls.getPager.strSql">
            <summary>
            生成SQL字符串 
            注意：如果使用OrderType!=-1时 strOrder只能使用一个字段排序,并且调用strSqlSingleOrder方法
                  否则调用strSqlUseNotIn方法
            </summary>
            <returns>生成SQL字符串</returns>
        </member>
        <member name="M:Cmn.Cls.getPager.strSqlUseNotIn">
            <summary>
            使用not in
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cmn.Cls.getPager.strSqlSingleOrder">
            <summary>
            只支持单个字段排序
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cmn.Cls.getPager.strSqlNoUseNotIn">
            <summary>
            没使用not in
            </summary>
            <returns></returns>
        </member>
        <member name="P:Cmn.Cls.getPager.tblName">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:Cmn.Cls.getPager.fldKey">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Cmn.Cls.getPager.fldFields">
            <summary>
            字段名
            </summary>
        </member>
        <member name="P:Cmn.Cls.getPager.PageSize">
            <summary>
            页大小
            </summary>
        </member>
        <member name="P:Cmn.Cls.getPager.PageIndex">
            <summary>
            当前页
            </summary>
        </member>
        <member name="P:Cmn.Cls.getPager.strWhere">
            <summary>
            条件
            </summary>
        </member>
        <member name="P:Cmn.Cls.getPager.strOrder">
            <summary>
            排序字段 注意：如果使用OrderType时 strOrder只能使用一个字段排序
            </summary>
        </member>
        <member name="P:Cmn.Cls.getPager.OrderType">
            <summary>
            排序类型 注意：如果strOrder支持多个字段排序时 不能使用OrderType属性
            </summary>
        </member>
        <member name="P:Cmn.Cls.getPager.doCount">
            <summary>
            不等0时是否输出记录数 
            </summary>
        </member>
        <member name="P:Cmn.Cls.getPager.State">
            <summary>
            返回操作状态
            </summary>
        </member>
        <member name="T:Cmn.Mis.PopupWin">
            <summary>
            弹出窗口
            </summary>
        </member>
        <member name="M:Cmn.Mis.PopupWin.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Cmn.Mis.PopupWin.Show">
            <summary>
            显示弹出窗口
            </summary>
        </member>
        <member name="M:Cmn.Mis.PopupWin.Hide">
            <summary>
            隐藏弹出窗口
            </summary>
        </member>
        <member name="P:Cmn.Mis.PopupWin.Title">
            <summary>
            弹出窗口标题
            </summary>
        </member>
        <member name="T:Cmn.Mis.BasDetailControl">
            <summary>
            明细控件的基本类，主要处理有明细表的数据
            </summary>
        </member>
        <member name="M:Cmn.Mis.BasDetailControl.SetMainKeyValue(System.String)">
            <summary>
            设置主表中主键的值
            </summary>
            <param name="mainKeyValue">主表中主键的值</param>
        </member>
        <member name="M:Cmn.Mis.BasDetailControl.LoadData(System.String)">
            <summary>
            根据主表主键载入明细表的记录
            </summary>
            <param name="mainKeyValue">主表主键的键值</param>
            <returns>返回0表示成功其它错误</returns>
        </member>
        <member name="M:Cmn.Mis.BasDetailControl.GetDelDataSql(System.String)">
            <summary>
            根据主表主键取得删除明细表中的记录的SQL语句（主要用于事务删除）
            </summary>
            <param name="mainKeyValue">主表主键的键值</param>
            <returns>删除明细表中记录</returns>
        </member>
        <member name="M:Cmn.Mis.BasDetailControl.SaveData(System.String)">
            <summary>
            根据主表主键保存数据到明细表中
            </summary>
            <param name="mainKeyValue">主表主键的键值</param>
            <returns>返回0表示成功其它错误</returns>
        </member>
        <member name="M:Cmn.Mis.BasDetailControl.InitControl">
            <summary>
            初始化控件
            </summary>
        </member>
        <member name="M:Cmn.Mis.BasDetailControl.SetEnabled(System.Boolean)">
            <summary>
            设置是否可用
            </summary>
            <param name="value">是否可用</param>
        </member>
        <member name="M:Cmn.Mis.BasDetailControl.GetValue">
            <summary>
            取得所有控件的值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.BasDetailControl.SetValue(System.String)">
            <summary>
            设置值
            </summary>
            <param name="value">所有控件的值，用GetValue获得</param>
        </member>
        <member name="M:Cmn.Cls.XmlExd.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="method">方法名称</param>
        </member>
        <member name="M:Cmn.Cls.XmlExd.AddNode(System.String,System.String,System.String)">
            <summary>
            增加节点
            </summary>
            <param name="mainNode">主节点名称</param>
            <param name="name">新节点名称</param>
            <param name="value">新节点的值</param>
            <returns>返回新增的节点</returns>
        </member>
        <member name="M:Cmn.Cls.XmlExd.AddNode(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            增加节点
            </summary>
            <param name="mainNode">主节点</param>
            <param name="name">新节点名称</param>
            <param name="value">新节点值</param>
            <returns>返回新增的节点</returns>
        </member>
        <member name="M:Cmn.Cls.XmlExd.AddNode(System.String,System.String)">
            <summary>
            增加节点
            </summary>
            <param name="name">新节点名称</param>
            <param name="value">新节点值</param>
            <returns>返回新增的节点</returns>
        </member>
        <member name="M:Cmn.Cls.XmlExd.AddNode(System.String)">
            <summary>
            增加节点
            </summary>
            <param name="name">新节点名称</param>
            <returns>返回新增的节点</returns>
        </member>
        <member name="T:Cmn.Mis.ProgressBar">
             <summary>
            ProgressBar 的摘要说明
             </summary>
        </member>
        <member name="P:Cmn.Mis.ProgressBar.Max">
            <summary>
            最大值
            </summary>
        </member>
        <member name="P:Cmn.Mis.ProgressBar.Value">
            <summary>
            当前值（例如50%）
            </summary>
        </member>
        <member name="P:Cmn.Mis.ProgressBar.Width">
            <summary>
            进度条宽度（单位像素）
            </summary>
        </member>
        <member name="P:Cmn.Mis.ProgressBar.Direction">
            <summary>
            方向，默认为正向（滚动条颜色部分会越来越多），True为正向，False为反向
            </summary>
        </member>
        <member name="T:Cmn.WebConfig">
            <summary>
            Web.Config配置类
            </summary>
        </member>
        <member name="M:Cmn.WebConfig.getApp(System.String)">
            <summary>
            取appSettings结点数据
            </summary>
            <param name="key">key</param>
            <returns>返回值</returns>
        </member>
        <member name="M:Cmn.WebConfig.SetApp(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cmn.WebConfig.getConn(System.String)">
            <summary>
            取connectionStrings结点数据
            </summary>
            <param name="key">name</param>
            <returns>返回值</returns>
        </member>
        <member name="M:Cmn.WebConfig.getDefaultConn">
            <summary>
            取默认的连接字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cmn.WebConfig.isDebug">
            <summary>
            Web.config的compilation节点的debug是否定义，是 True 否 False
            </summary>
            <returns>是否为Debug状态。是：True 否：False</returns>
        </member>
        <member name="T:Cmn.Request">
            <summary>
            Request操作类
            </summary>
        </member>
        <member name="M:Cmn.Request.Get(System.String)">
            <summary>
            接收传值
            </summary>
            <param name="varName">参数名称</param>
            <returns>参数对应的值</returns>
        </member>
        <member name="M:Cmn.Request.GetQ(System.String)">
            <summary>
            取URL上的参数
            </summary>
            <param name="varName">参数名</param>
            <returns>返回参数</returns>
        </member>
        <member name="M:Cmn.Request.GetF(System.String)">
            <summary>
            取POST提交的数据
            </summary>
            <param name="varName">名称</param>
            <returns>返回值</returns>
        </member>
        <member name="M:Cmn.Request.GetRootUrl">
            <summary>
            获取当前网站根url（可能有虚拟目录）
            </summary>
            <returns>当前网站根url（可能有虚拟目录）</returns>
        </member>
        <member name="T:Cmn.Js">
            <summary>
            Js操作类
            </summary>
        </member>
        <member name="M:Cmn.Js.Run(System.Web.UI.Page,System.String,System.Boolean)">
            <summary>
            运行JS代码
            </summary>
            <param name="page">指定Page</param>
            <param name="_strCode">要注册的代码</param>
            <param name="isTop">是否在头部/否则在尾部</param>
        </member>
        <member name="M:Cmn.Js.Run(System.Web.UI.Page,System.String,System.Boolean,System.String)">
            <summary>
            运行JS代码
            </summary>
            <param name="page">指定Page</param>
            <param name="_strCode">要注册的代码</param>
            <param name="isTop">是否在头部/否则在尾部</param>
            <param name="IDStr">Key</param>
        </member>
        <member name="M:Cmn.Js.Run(System.Web.UI.Page,System.Boolean,System.String)">
            <summary>
            清空指定注册的JS代码
            </summary>
            <param name="page">指定Page</param>
            <param name="isTop">是否在头部/否则在尾部</param>
            <param name="IDStr">Key</param>
        </member>
        <member name="M:Cmn.Js.Alert(System.String)">
            <summary>
            提示信息
            </summary>
            <param name="_Msg">消息</param>
        </member>
        <member name="M:Cmn.Js.Alert(System.Web.UI.Page,System.String)">
            <summary>
            提示信息
            </summary>
            <param name="page">指定页</param>
            <param name="_Msg">消息</param>
        </member>
        <member name="M:Cmn.Js.AlertToUrl(System.String,System.String)">
            <summary>
            提示信息并跳转到另外一个Url
            </summary>
            <param name="msg">消息</param>
            <param name="toUrl">转向到的Url</param>
        </member>
        <member name="M:Cmn.Js.Alert(System.Web.UI.Page,System.String,System.Boolean)">
            <summary>
            提示信息
            </summary>
            <param name="page">指定页</param>
            <param name="_Msg">消息</param>
            <param name="isTop">是否在头部/否则在尾部</param>
        </member>
        <member name="M:Cmn.Js.Import(System.Web.UI.Page,System.String,System.Boolean)">
            <summary>
            注册一个处部JS文件/或CSS文件
            </summary>
            <param name="page">指定页</param>
            <param name="filePath">文件</param>
            <param name="isTop">是否在头部/否则在尾部</param>
        </member>
        <member name="M:Cmn.Js.loadCss(System.Web.UI.WebControls.PlaceHolder,System.String)">
            <summary>
            注册一个处部CSS文件
            </summary>
            <param name="_PlaceHolder">PlaceHolder组件</param>
            <param name="cssFile">CSS文件</param>
        </member>
        <member name="M:Cmn.Js.AddAttr(System.Web.UI.WebControls.WebControl,System.String,System.String)">
            <summary>
            添加属性
            </summary>
            <param name="Control">WebControl</param>
            <param name="eventStr">名称</param>
            <param name="MsgStr">内容</param>
        </member>
        <member name="M:Cmn.Js.chkFormData(System.Web.UI.Page,System.String,System.String,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            验证数据完整性
            </summary>
            <param name="page">Page</param>
            <param name="dataValue">内容</param>
            <param name="divObjStr">div对像 如果为空时以alert方法显示</param>
            <param name="minLength">最小长度</param>
            <param name="maxLength">最大长度</param>
            <param name="titleStr">标题</param>
            <param name="isNVarchar">是否Nvarchar类型</param>
            <returns>真/假</returns>
            <example>
            <code>
            private bool doSave()
            { 
                if (!Cmn.Js.chkFormData(this, "", "", 1, 20, "姓名", false)) return false;
                if (!Cmn.Js.chkFormData(this, "熊", "", 4, 20, "姓名", false)) return false;
                if (!Cmn.Js.chkFormData(this, "熊华春123456789123451", "", 4, 20, "姓名", false)) return false;
                return true;
            }
            if (doSave()) Cmn.Js.Alert(this,"成功");
            </code>
            </example>
        </member>
        <member name="M:Cmn.Mis.Func.GetUserFormID(System.Web.UI.Page)">
            <summary>
            获取用户界面的代码
            </summary>
            <param name="page">page类</param>
            <returns>用户界面代码</returns>
        </member>
        <member name="M:Cmn.Mis.Func.GetUserFormID(System.String)">
            <summary>
            获取用户界面的代码
            </summary>
            <param name="pathAndQuery">Url中的文件名和参数</param>
            <returns>用户界面代码</returns>
        </member>
        <member name="M:Cmn.Mis.Func.GetBatchNumber(System.String)">
            <summary>
            产生新的批号
            </summary>
            <param name="suffix">后缀（进货01，完工单02。。。）</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.Func.GetSysCfg(System.String)">
            <summary>
            获取系统配置
            </summary>
            <param name="key">配置主键</param>
            <returns>键值</returns>
        </member>
        <member name="M:Cmn.Mis.Func.SetSysCfg(System.String,System.String)">
            <summary>
            设置系统配置
            </summary>
            <param name="key">配置主键</param>
            <param name="value">键值</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.Func.SavePageState(Cmn.Mis.TablePage)">
            <summary>
            保存页面状态，当页面返回的时候用
            </summary>
            <param name="tablePage">TablePage页面对象</param>
        </member>
        <member name="M:Cmn.Mis.Func.RefreshExcelTemplateDefine(System.String,System.String)">
            <summary>
            刷新模板定义
            </summary>
            <param name="strSql">sql语句</param>
            <param name="excelTemplateFileName">Excel模板文件</param>
        </member>
        <member name="M:Cmn.Mis.Func.OutputToExcel(System.String,System.String)">
            <summary>
            输出到Excel
            </summary>
            <param name="strSql">sql语句</param>
            <param name="excelTemplateFileName">Excel模板文件名</param>
            <returns>生成的Excel的名称</returns>
        </member>
        <member name="M:Cmn.Mis.Func.OutputToExcel(System.Web.UI.Page,System.String,System.String)">
            <summary>
            输出到Excel，并Response到页面
            </summary>
            <param name="curPage">当前页面</param>
            <param name="strSql">sql语句</param>
            <param name="excelFileName">Excel模板文件</param>
        </member>
        <member name="M:Cmn.Mis.Func.GetMaxUserCount">
            <summary>
            获取当前软件允许的最大用户数
            </summary>
            <returns>允许的最大用户数,如果为0说明数据异常可能是用户表中的可登录用户超过了允许的范围</returns>
        </member>
        <member name="M:Cmn.Mis.Func.GetRegisterCode">
            <summary>
            获取注册号
            </summary>
            <returns></returns>        
        </member>
        <member name="M:Cmn.Mis.Func.GetSN(System.String)">
            <summary>
            根据注册码获取序列号
            </summary>
            <param name="registerCode"></param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.Func.CheckSN">
            <summary>
            检查SN是否合法
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.Func.ShowMessage(System.Web.UI.Page,System.String,System.String)">
            <summary>
            显示提示信息框
            </summary>
            <param name="curPage">当前页</param>
            <param name="title">提示信息框标题</param>
            <param name="content">提示内容</param>
        </member>
        <member name="M:Cmn.Mis.Func.GetUserName(System.String)">
            <summary>
            根据用户代码获取用户名（后台管理用户）
            </summary>
            <param name="userID">用户代码</param>
            <returns>用户名</returns>
        </member>
        <member name="T:Cmn.Html">
            <summary>
            Html代码相关的处理类
            </summary>
        </member>
        <member name="M:Cmn.Html.RemoveHTML(System.String)">
            <summary>
            删除HTML源代码
            </summary>
            <param name="htmlCode">html源代码</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Html.RemoveHTML(System.String,System.String)">
            <summary>
            删除HTML源代码
            </summary>
            <param name="htmlCode">html源代码</param>
            <param name="newlineSign">换行符（如：\n或<br/>等）</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Cmn.Html.RemoveHTML(System.String,System.String,System.Boolean)”忽略有格式错误的 XML 注释 -->
        <member name="M:Cmn.Html.GetHref(System.String)">
            <summary>
            获取页面的链接正则 GetHref(htmlCode);
            </summary>
            <param name="htmlCode"></param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Html.HtmlEncode(System.String)">
            <summary>
            HTML Encode
            </summary>
            <param name="strInput">HTML代码</param>
            <returns>HtmlEncode</returns>
        </member>
        <member name="M:Cmn.Html.HtmlDecode(System.String)">
            <summary>
            HTML Decode
            </summary>
            <param name="strInput">HTML代码</param>
            <returns>HtmlDecode</returns>
        </member>
        <member name="M:Cmn.Html.AddHostToUrl(System.String,System.String)">
            <summary>
            把Html代码中相对路径的Url加上指定的host全部变成全路径
            </summary>
            <param name="htmlCode">html代码</param>
            <param name="hostUrl">HostUrl</param>
            <returns>处理成全路径后的Html代码</returns>
        </member>
        <member name="M:Cmn.Html.AddHostToUrl(System.String,System.String,System.String)">
            <summary>
            把Html代码中相对路径的Url加上指定的host全部变成全路径
            </summary>
            <param name="htmlCode">html代码</param>
            <param name="hostUrl">HostUrl</param>        
            <param name="attributeName">属性名称，例如src,href等</param>
            <returns>处理成全路径后的Html代码</returns>
        </member>
        <member name="T:Cmn.Controls.ConfirmBox">
            <summary>
            确认框
            </summary>
        </member>
        <member name="M:Cmn.Controls.ConfirmBox.#ctor(System.Web.UI.Page,System.EventHandler,System.EventHandler)">
            <summary>
            确认框构造函数
            </summary>
            <param name="curPage">当前页面</param>
            <param name="okClick">确定事件</param>
            <param name="cancelClick">取消事件</param>
        </member>
        <member name="M:Cmn.Controls.ConfirmBox.Show(System.String,System.String)">
            <summary>
            显示
            </summary>
            <param name="title">标题</param>
            <param name="msg">提示信息</param>
        </member>
        <member name="T:Cmn.Mis.TablePageDetail">
            <summary>
            明细页面
            </summary>
        </member>
        <member name="T:Cmn.Mis.TablePage">
            <summary>
            对单个表的记录进行增加、删除、修改操作的Page类
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.PhdMain">
             <summary>
            主要的控件容器，包含了其它所有的容器和控件 
             </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.PhdEdit">
            <summary>
            编辑界面的控件容器
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.PhdDisplay">
            <summary>
            记录列表显示界面的控件容器
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.PhdBottom">
            <summary>
            底部的控件容器
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.btnAdd">
            <summary>
            增加记录按钮
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.btnDel">
            <summary>
            删除记录按钮
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.btnModify">
            <summary>
            修改记录按钮
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.btnSave">
            <summary>
            保存记录按钮
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.btnSaveToAdd">
            <summary>
            保存记录并继续增加
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.btnCancel">
            <summary>
            取消按钮
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.btnToExcel">
            <summary>
            输出到Excel按钮
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.btnView">
            <summary>
            查看记录按钮
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.btnReturnPreviousManagePage">
            <summary>
            返回前一个管理界面
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.btnSetUserForm">
            <summary>
            设置用户界面
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.btnSetMessage">
            <summary>
            设置消息提醒
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.lblHelpLink">
            <summary>
            帮助链接
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.gvwRecLst">
            <summary>
            记录列表
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.pnlRecFilter">
            <summary>
            数据查询界面
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.IsSaveSuccess">
            <summary>
            修改或新增或删除记录时保存是否成功
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.RequestState">
            <summary>
            通过Url传递过来的状态参数，可以是修改，添加等
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.RequestCondition">
            <summary>
            通过Url传递过来的条件参数，是显示语句的条件
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.RequestKeyFieldValue">
            <summary>
            通过Url传递过来的主关键字段的值，用于筛选记录
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.pnlMainRecInfo">
            <summary>
            主表数据显示的地方,如果是明细页面的时候用，目前其它时候没用 
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.pnlEditEnd">
            <summary>
            在编辑界面最下面，在保存和取消按钮的上面，目前主要用于主数据页面显示明细数据用
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.pnlDispButton">
            <summary>
            列表页下面的按钮都放在这个Panel上
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.pnlDispHead">
            <summary>
            列表页头部的信息都放在这个Panel上
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage._ShowOptInGrid">
            <summary>
            数据列表中是否显示“修改”和“删除”操作，默认为显示
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage._ShowSelectCheckBox">
            <summary>
            是否显示选择行的CheckBox，默认不显示
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.btnRefreshData">
            <summary>
            刷新数据按钮
            </summary>
        </member>
        <member name="M:Cmn.Mis.TablePage.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Cmn.Mis.TablePage.ClearSort">
            <summary>
            清除排序标记（上下箭头）
            </summary>
        </member>
        <member name="M:Cmn.Mis.TablePage.GetListTitle">
            <summary>
            获取数据列表的标题 add at 20120218
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.TablePage.btnAdd_Click(System.Object,System.EventArgs)">
            <summary>
            增加点击事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Cmn.Mis.TablePage.btnDel_Click(System.Object,System.EventArgs)">
            <summary>
            删除点击事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Cmn.Mis.TablePage.btnModify_Click(System.Object,System.EventArgs)">
            <summary>
            修改点击事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Cmn.Mis.TablePage.btnToExcel_Click(System.Object,System.EventArgs)">
            <summary>
            输出到Excel点击事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Cmn.Mis.TablePage.SetViewState(Cmn.Mis.TablePage.TViewState)">
            <summary>
            设置当前显示状态
            </summary>
            <param name="viewState">状态类型</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.GetDelDetailSql(System.String)">
            <summary>
            取得删除明细表中的记录的sql语句
            </summary>
            <param name="keyValue">主键的键值</param>
            <returns>返回0表示正确其它错误</returns>
        </member>
        <member name="M:Cmn.Mis.TablePage.LoadDetail(System.String)">
            <summary>
            载入明细表记录
            </summary>
            <param name="keyValue">主键的键值</param>
            <returns>返回0表示正确其它错误</returns>
        </member>
        <member name="M:Cmn.Mis.TablePage.SetDetailMainKeyValue(System.String)">
            <summary>
            设置明细控件中主表的主键值（主要解决修改记录后增加记录时主表的键值还存在的问题）
            </summary>
            <param name="keyValue">主键的键值</param>
            <returns>返回0表示正确其它错误</returns>
        </member>
        <member name="M:Cmn.Mis.TablePage.SaveDetail(System.String)">
            <summary>
            保存明细表记录
            </summary>
            <param name="keyValue">主键的键值</param>
            <returns>返回0表示正确其它错误</returns>
        </member>
        <member name="M:Cmn.Mis.TablePage.GetDetailControl">
            <summary>
            取得所有的明细记录控件列表
            </summary>
            <returns>明细记录控件列表</returns>
        </member>
        <member name="M:Cmn.Mis.TablePage.SetDataColStartLoc">
            <summary>
            设置数据列开始的位置
            </summary>
        </member>
        <member name="M:Cmn.Mis.TablePage.btnSave_Click(System.Object,System.EventArgs)">
            <summary>
            保存点击事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Cmn.Mis.TablePage.btnSaveToAdd_Click(System.Object,System.EventArgs)">
            <summary>
            保存记录并继续增加
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Cmn.Mis.TablePage.LoadPageStateFromPersistenceMedium">
            <summary>
            载入PageViewState
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.TablePage.SavePageStateToPersistenceMedium(System.Object)">
            <summary>
            保存PageViewState
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Cmn.Mis.TablePage.Display(System.String)">
            <summary>
            显示记录列表
            </summary>
            <param name="selectSql">查询SQL语句</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.Display(System.String,System.String)">
            <summary>
            显示记录列表
            </summary>
            <param name="execSql">要在查询SQL语句之前执行的语句</param>
            <param name="selectSql">查询SQL语句</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.RefreshData">
            <summary>
            刷新显示的记录列表
            </summary>
        </member>
        <member name="M:Cmn.Mis.TablePage.AddCol(System.String,System.String,System.Boolean)">
            <summary>
            增加需要显示的列
            </summary>
            <param name="colName">列字段名</param>
            <param name="colTitle">列显示标题</param>
            <param name="htmlEncode">是否显示html代码</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.AddCol(System.String,System.String)">
            <summary>
            增加需要显示的列
            </summary>
            <param name="colName">列字段名</param>
            <param name="colTitle">列显示标题</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.AddCol(System.String,System.String,System.String)">
            <summary>
            增加需要显示的列
            </summary>
            <param name="colName">列字段名</param>
            <param name="colTitle">列显示标题</param>
            <param name="colFormat">字段数据的显示格式</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.AddCol(System.String,System.String,System.Int32)">
            <summary>
            增加需要显示的列
            </summary>
            <param name="colName">列字段名</param>
            <param name="colTitle">列显示标题</param>
            <param name="colWidth">列宽度</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.AddCol(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            增加需要显示的列
            </summary>
            <param name="colName">列字段名</param>
            <param name="colTitle">列显示标题</param>
            <param name="colWidth">列宽度</param>
            <param name="htmlEncode">是否显示html代码</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.AddCol(System.String,System.String,System.Web.UI.WebControls.HorizontalAlign)">
            <summary>
            增加需要显示的列
            </summary>
            <param name="colName">列字段名</param>
            <param name="colTitle">列显示标题</param>
            <param name="align">对齐方式</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.AddCol(System.String,System.String,System.Web.UI.WebControls.HorizontalAlign,System.Boolean)">
            <summary>
            增加需要显示的列
            </summary>
            <param name="colName">字段名</param>
            <param name="colTitle">列显示标题</param>
            <param name="align">对齐方式</param>
            <param name="htmlEncode">是否显示html代码</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.AddCol(System.String,System.String,System.Int32,System.Web.UI.WebControls.HorizontalAlign)">
            <summary>
            增加需要显示的列
            </summary>
            <param name="colName">列字段名</param>
            <param name="colTitle">列显示标题</param>
            <param name="colWidth">列宽度</param>
            <param name="align">对齐方式</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.AddCol(System.String,System.String,System.Int32,System.Web.UI.WebControls.HorizontalAlign,System.Boolean)">
            <summary>
            增加需要显示的列
            </summary>
            <param name="colName">列字段名</param>
            <param name="colTitle">列显示标题</param>
            <param name="colWidth">列宽度</param>
            <param name="align">对齐方式</param>
            <param name="htmlEncode">是否显示html代码</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.AddCol(System.String,System.String,System.Int32,System.Web.UI.WebControls.HorizontalAlign,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            增加需要显示的列
            </summary>
            <param name="colName">列字段名</param>
            <param name="colTitle">列显示标题</param>
            <param name="colWidth">列宽度</param>
            <param name="align">对齐方式</param>
            <param name="htmlEncode">是否显示html代码</param>
            <param name="checkIsExists">检查是否存在</param>
            <param name="isHide">是否隐藏字段</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.AddCol(System.String,System.String,System.Int32,System.Web.UI.WebControls.HorizontalAlign,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            增加需要显示的列
            </summary>
            <param name="colName">列字段名</param>
            <param name="colTitle">列显示标题</param>
            <param name="colWidth">列宽度</param>
            <param name="align">对齐方式</param>
            <param name="htmlEncode">是否显示html代码</param>
            <param name="checkIsExists">检查是否存在</param>
            <param name="isHide">是否隐藏字段</param>
            <param name="colFormat">字段数据显示格式</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.AddCol(System.String)">
            <summary>
            根据界面的文件名增加列
            </summary>
            <param name="fileName">界面的文件名</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.AddButtonCol(System.String,System.String,System.String)">
            <summary>
            增加按钮列
            </summary>
            <param name="commandName">命令名</param>
            <param name="colTitle">列标题</param>
            <param name="buttonText">按钮标题</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.AddButtonCol(System.String,System.String,System.String,System.Web.UI.WebControls.ButtonType)">
            <summary>
            增加按钮列
            </summary>
            <param name="commandName">命令名</param>
            <param name="colTitle">列标题</param>
            <param name="buttonText">按钮标题</param>
            <param name="buttonType">按钮类型</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.AddCheckBoxCol(System.String,System.String)">
            <summary>
            增加Checkbox列
            </summary>
            <param name="colTitle">列标题</param>
            <param name="fieldName">字段名</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.ClearColumns">
            <summary>
            删除所有的列
            </summary>
        </member>
        <member name="M:Cmn.Mis.TablePage.GetColumnIndex(System.String)">
            <summary>
            根据字段名获取在列表中的位置
            </summary>
            <param name="columnName">字段名</param>
            <returns>字段位置，如果不存在返回-1</returns>
        </member>
        <member name="M:Cmn.Mis.TablePage.IsModify">
            <summary>
            判断是否在编辑记录状态
            </summary>
            <returns>true:在记录编辑状态；false:不在记录编辑状态</returns>
        </member>
        <member name="M:Cmn.Mis.TablePage.GetCurField">
            <summary>
            取得当前选中行第一个字段的值
            </summary>
            <returns>当前选中行第一个字段的值</returns>
        </member>
        <member name="M:Cmn.Mis.TablePage.GetCurField(System.Int32)">
            <summary>
            取得当前选中行指定字段的值 
            </summary>
            <param name="fieldNo">字段序号（从1开始）</param>
            <returns>当前选中行指定字段的值</returns>
        </member>
        <member name="M:Cmn.Mis.TablePage.GetField(System.Int32)">
            <summary>
            取得指定行的第一个字段
            </summary>
            <param name="rowNo">行号</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.TablePage.GetField(System.Int32,System.Int32)">
            <summary>
            取得指定行，指定列的内容
            </summary>
            <param name="rowNo">行号</param>
            <param name="fieldNo">列号</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.TablePage.SetPageSize(System.Int32)">
            <summary>
            设置每页的记录数
            </summary>
            <param name="pageSize">每页显示的记录数</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.GetPageSize">
            <summary>
            获得每页的记录数
            </summary>
        </member>
        <member name="M:Cmn.Mis.TablePage.GetPageIndex">
            <summary>
            获得当前页索引号
            </summary>
        </member>
        <member name="M:Cmn.Mis.TablePage.SetPageIndex(System.Int32)">
            <summary>
            设置当前页索引号
            </summary>
            <param name="pageIndex">页索引号</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.GetRowCount">
            <summary>
            取得列表中记录总行数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.TablePage.GetColumnCount">
            <summary>
            取得列的数量
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.TablePage.GetColumnDesc(System.Int32)">
            <summary>
            取得列标题名称
            </summary>
            <param name="columnNo"></param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.TablePage.GetSelectedIndex">
            <summary>
            获取当前选中行的索引
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.TablePage.SetSelectedIndex(System.Int32)">
             <summary>
             设置当前选中列
             </summary>
            <param name="rowNo">列序号</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.ShowFilter(System.Boolean)">
            <summary>
            显示筛选控制面板
            </summary>
            <param name="IsShow">true：显示；false：不显示</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.GetKeyField">
            <summary>
            取得主键字段名
            </summary>
            <returns>主键字段名</returns>
        </member>
        <member name="M:Cmn.Mis.TablePage.GetTableName">
            <summary>
            取得数据库表名
            </summary>
            <returns>数据库表名</returns>
        </member>
        <member name="M:Cmn.Mis.TablePage.SetState(Cmn.Mis.TablePage.TViewState)">
            <summary>
            设置页面状态
            </summary>
            <param name="viewState"></param>
        </member>
        <member name="M:Cmn.Mis.TablePage.GetState">
            <summary>
            取得页面状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.TablePage.SaveToViewState(System.String,System.Object)">
            <summary>
            保存到ViewState
            </summary>
            <param name="keyName">键名称</param>
            <param name="obj">要保存的对象</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.LoadFromViewState(System.String)">
            <summary>
            从ViewState取值
            </summary>
            <param name="keyName">键名称</param>
            <returns>对象</returns>
        </member>
        <member name="M:Cmn.Mis.TablePage.GetTitle">
            <summary>
            取得当前界面的标题（由界面管理设置）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.TablePage.SetGridTitle(System.String)">
            <summary>
            设置Grid的标题
            </summary>
            <param name="title">标题</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.SetColLink(System.String,System.String,System.String)">
            <summary>
            设置字段的链接，可以查看某个字段内容的明细
            </summary>
            <param name="colName">字段名</param>
            <param name="linkPageName">链接到的页面名称</param>
            <param name="foreignKeyFieldName">外键字段名</param>
        </member>
        <member name="M:Cmn.Mis.TablePage.GetSelectKeyFieldValue">
            <summary>
            获取选中行的主键的值的列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.TablePage.GetColWidthAll">
            <summary>
            获取所有列的总宽度
            </summary>
            <returns></returns>
        </member>
        <member name="P:Cmn.Mis.TablePage.UserFormID">
            <summary>
            用户界面代码
            </summary>
        </member>
        <member name="E:Cmn.Mis.TablePage.OnPrintRow">
            <summary>
            列表中的打印行事件
            </summary>
        </member>
        <member name="E:Cmn.Mis.TablePage.BeforeAddClick">
            <summary>
            增加按钮点击前事件
            </summary>
        </member>
        <member name="E:Cmn.Mis.TablePage.AfterAddClick">
            <summary>
            增加按钮点击后事件
            </summary>
        </member>
        <member name="E:Cmn.Mis.TablePage.BeforeModifyClick">
            <summary>
            修改按钮点击前事件
            </summary>
        </member>
        <member name="E:Cmn.Mis.TablePage.AfterModifyClick">
            <summary>
            修改按钮点击后事件
            </summary>
        </member>
        <member name="E:Cmn.Mis.TablePage.BeforeDelClick">
            <summary>
            删除按钮点击前事件
            </summary>
        </member>
        <member name="E:Cmn.Mis.TablePage.AfterDelClick">
            <summary>
            删除按钮点击后事件
            </summary>
        </member>
        <member name="E:Cmn.Mis.TablePage.BeforeViewClick">
            <summary>
            查看按钮点击前事件
            </summary>
        </member>
        <member name="E:Cmn.Mis.TablePage.AfterViewClick">
            <summary>
            查看按钮点击后事件
            </summary>
        </member>
        <member name="E:Cmn.Mis.TablePage.BeforeAddSave">
            <summary>
            增加记录保存前事件
            </summary>
        </member>
        <member name="E:Cmn.Mis.TablePage.AfterAddSave">
            <summary>
            增加记录保存后事件
            </summary>
        </member>
        <!-- 对于成员“E:Cmn.Mis.TablePage.AddSaveError”忽略有格式错误的 XML 注释 -->
        <member name="E:Cmn.Mis.TablePage.BeforeModifySave">
            <summary>
            修改记录保存前事件
            </summary>
        </member>
        <member name="E:Cmn.Mis.TablePage.AfterModifySave">
            <summary>
            修改记录保存后事件
            </summary>
        </member>
        <!-- 对于成员“E:Cmn.Mis.TablePage.ModifySaveError”忽略有格式错误的 XML 注释 -->
        <member name="E:Cmn.Mis.TablePage.BeforeToExcelClick">
            <summary>
            输出到Excel按钮点击前事件
            </summary>
        </member>
        <member name="E:Cmn.Mis.TablePage.AfterToExcelClick">
            <summary>
            输出到Excel按钮点击后事件
            </summary>
        </member>
        <member name="E:Cmn.Mis.TablePage.RowCommand">
            <summary>
            GridView行命令事件
            </summary>
        </member>
        <member name="E:Cmn.Mis.TablePage.RowDataBound">
            <summary>
            GridView行数据绑定
            </summary>
        </member>
        <member name="P:Cmn.Mis.TablePage.LastInsertID">
            <summary>
            最后插入记录的代码
            </summary>
        </member>
        <member name="P:Cmn.Mis.TablePage.ShowOptInGrid">
            <summary>
            是否在列表中显示操作列
            </summary>
        </member>
        <member name="P:Cmn.Mis.TablePage.ShowSelectCheckBox">
            <summary>
            是否显示选择行的CheckBox，默认不显示
            </summary>
        </member>
        <member name="P:Cmn.Mis.TablePage.PageViewState">
            <summary>
            页面的ViewState
            </summary>
        </member>
        <member name="T:Cmn.Mis.TablePage.TViewState">
            <summary>
            Page的状态
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.TViewState.RecList">
            <summary>
            列表
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.TViewState.Delete">
            <summary>
            删除
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.TViewState.Add">
            <summary>
            增加
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.TViewState.Modify">
            <summary>
            修改
            </summary>
        </member>
        <member name="F:Cmn.Mis.TablePage.TViewState.View">
            <summary>
            查看记录明细
            </summary>
        </member>
        <member name="T:Cmn.Mis.TablePage.EventBefore">
            <summary>
            Before事件定义
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件参数</param>
            <param name="ExecuteDefault">是否执行默认的代码</param>
        </member>
        <member name="T:Cmn.Mis.TablePage.EventPrint">
            <summary>
            列表中的打印事件
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件参数</param>
            <param name="keyValue">当前行主键的值</param>
        </member>
        <member name="F:Cmn.Mis.TablePageDetail._RequestMainRecInfo">
            <summary>
            通过Url传递过来的，主数据的信息，用于头部显示
            </summary>
        </member>
        <member name="M:Cmn.Mis.TablePageDetail.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Cmn.Mis.TablePageDetail.GetMainKeyFieldValue">
            <summary>
            取得主表主字段的值
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cmn.Rand">
            <summary>
            生成随机数类
            </summary>
        </member>
        <member name="F:Cmn.Rand._RandIndex">
            <summary>
            随机系数
            </summary>
        </member>
        <member name="M:Cmn.Rand.RndNum(System.Int32)">
            <summary>
            数字随机数
            </summary>
            <param name="length">生成长度</param>
            <returns>返回指定长度的数字随机串</returns>
        </member>
        <member name="M:Cmn.Rand.RndDateStr">
            <summary>
            日期随机函数
            </summary>
            <returns>返回日期随机串</returns>
        </member>
        <member name="M:Cmn.Rand.RndCode(System.Int32)">
            <summary>
            数字和字母随机数
            </summary>
            <param name="length">生成长度</param>
            <returns>返回指定长度的数字和字母的随机串</returns>
        </member>
        <member name="M:Cmn.Rand.RndLetter(System.Int32)">
            <summary>
            字母随机数
            </summary>
            <param name="length">生成长度</param>
            <returns>返回指定长度的字母随机数</returns>
        </member>
        <member name="M:Cmn.Rand.GetGuid">
            <summary>
            生成GUID
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cmn.Cls.Pager">
            <summary>
            分页显示类
            </summary>
        </member>
        <member name="M:Cmn.Cls.Pager.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Cmn.Cls.Pager.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="Url">URL</param>
            <param name="PageIndex">当前页</param>
            <param name="TotalPage">总页</param>
            <param name="PageSize">页大小</param>
            <param name="TotalRecord">总记录数</param>
            <param name="StyleName">样式 默认BasePager</param>
        </member>
        <member name="M:Cmn.Cls.Pager.setData(System.Web.UI.Page,System.String)">
            <summary>
            填充Html代码
            </summary>
            <param name="Page">当前page</param>
            <param name="CtrlID">输出到哪个HTML控件中</param>
        </member>
        <member name="M:Cmn.Cls.Pager.getData(System.String)">
            <summary>
            取分页JS代码
            </summary>
            <param name="CtrlID">输出到哪个HTML控件中</param>
        </member>
        <member name="P:Cmn.Cls.Pager.Url">
            <summary>
            URL
            </summary>
        </member>
        <member name="P:Cmn.Cls.Pager.PageIndex">
            <summary>
            当前页
            </summary>
        </member>
        <member name="P:Cmn.Cls.Pager.TotalPage">
            <summary>
            总页
            </summary>
        </member>
        <member name="P:Cmn.Cls.Pager.PageSize">
            <summary>
            页大小
            </summary>
        </member>
        <member name="P:Cmn.Cls.Pager.TotalRecord">
            <summary>
            总记录
            </summary>
        </member>
        <member name="P:Cmn.Cls.Pager.StyleName">
            <summary>
            样式
            </summary>
        </member>
        <member name="P:Cmn.Cls.Pager.HAlign">
            <summary>
            对齐方式
            </summary>
        </member>
        <member name="P:Cmn.Cls.Pager.Index">
            <summary>
            索引
            </summary>
        </member>
        <member name="T:Cmn.Cls.Pager.Align">
            <summary>
            对齐方式
            </summary>
        </member>
        <member name="F:Cmn.Cls.Pager.Align.Left">
            <summary>
            左对齐
            </summary>
        </member>
        <member name="F:Cmn.Cls.Pager.Align.Center">
            <summary>
            居中
            </summary>
        </member>
        <member name="F:Cmn.Cls.Pager.Align.Right">
            <summary>
            右对齐
            </summary>
        </member>
        <member name="T:Cmn.Mis.FieldCheck">
            <summary>
            字段检验类
            </summary>
        </member>
        <member name="M:Cmn.Mis.FieldCheck.Check(System.String,System.String,System.String)">
            <summary>
            检验对应字段的输入是否正确
            </summary>
            <param name="tableName">表名</param>
            <param name="fieldName">字段名</param>
            <param name="txt">输入内容</param>
            <returns>空为输入正确，其它为错误信息</returns>
        </member>
        <member name="M:Cmn.Mis.FieldCheck.GetRegex(System.String,System.String,System.String@,System.String@)">
            <summary>
            取对应字段的正则
            </summary>
            <param name="tableName">表名</param>
            <param name="controlName">控件名</param>
            <param name="regexContent">正则表达式</param>
            <param name="errorMsg">错误信息</param>
            <returns>-1没有找到对应控件的正则，0找到</returns>       
        </member>
        <member name="M:Cmn.Mis.FieldCheck.CheckTableInfo(Cmn.Cls.TableInfo,System.String@)">
            <summary>
            检验TableInfo中所有的字段是否符合规范
            </summary>
            <param name="tableInfo">TableInfo</param>
            <param name="errorMsg">错误信息</param>
            <returns>是否正确，全部正确返回true,只要有一个错误返回false</returns>
        </member>
        <member name="M:Cmn.Mis.FieldCheck.LoadFieldRegex">
            <summary>
            从数据库读入所有表的字段规则信息
            </summary>
        </member>
        <member name="T:Cmn.Mis.FieldCheck.RegexInfo">
            <summary>
            正则信息
            </summary>
        </member>
        <member name="T:Cmn.Mis.DetailControl">
            <summary>
            明细表显示以及编辑控件
            </summary>
        </member>
        <member name="F:Cmn.Mis.DetailControl.pnlHead">
            <summary>
            头部，主要是标题和编辑按钮
            </summary>
        </member>
        <member name="F:Cmn.Mis.DetailControl.lblHeadTitle">
            <summary>
            头部的标题，提示
            </summary>
        </member>
        <member name="F:Cmn.Mis.DetailControl.pnlMain">
            <summary>
            主要的panel
            </summary>
        </member>
        <member name="F:Cmn.Mis.DetailControl.pnlMainBg">
            <summary>
            明细窗口弹出的时候用的背景面板
            </summary>
        </member>
        <member name="F:Cmn.Mis.DetailControl.pnlMainTitle">
            <summary>
            主要panel的标题
            </summary>
        </member>
        <member name="F:Cmn.Mis.DetailControl.pnlEdit">
            <summary>
            编辑界面的控件容器
            </summary>
        </member>
        <member name="F:Cmn.Mis.DetailControl.pnlDisplay">
            <summary>
            记录列表显示界面的控件容器
            </summary>
        </member>
        <member name="F:Cmn.Mis.DetailControl.pnlButton">
            <summary>
            按钮面板，主要放增加、删除、修改等按钮
            </summary>
        </member>
        <member name="F:Cmn.Mis.DetailControl.gvwRecLst">
            <summary>
            记录列表
            </summary>
        </member>
        <member name="F:Cmn.Mis.DetailControl.lblMainPanelTitle">
            <summary>
            弹出窗体的标题
            </summary>
        </member>
        <member name="F:Cmn.Mis.DetailControl._UserFormID">
            <summary>
            用户界面代码
            </summary>
        </member>
        <member name="F:Cmn.Mis.DetailControl.ShowOptInGrid">
            <summary>
            数据列表中是否显示“修改”和“删除”操作，默认为显示
            </summary>
        </member>
        <member name="F:Cmn.Mis.DetailControl.IsSaveSuccess">
            <summary>
            是否保存成功
            </summary>
        </member>
        <member name="M:Cmn.Mis.DetailControl.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Cmn.Mis.DetailControl.ShowMainPanel(Cmn.Mis.DetailControl.TViewState)">
            <summary>
            显示明细编辑面板
            </summary>
            <param name="viewState">显示状态</param>
        </member>
        <member name="M:Cmn.Mis.DetailControl.GetTitle">
            <summary>
            获取弹出窗口的标题
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.DetailControl.AddHideCol(System.String)">
            <summary>
            增加隐藏的列，主要是配合基类的使用
            </summary>
            <param name="colName">列名</param>
        </member>
        <member name="M:Cmn.Mis.DetailControl.Display(System.String,System.String)">
            <summary>
            显示记录列表
            </summary>
            <param name="strSql">带主表主键where条件的sql语句</param>
            <param name="mainKeyField">主表的主键字段名</param>
        </member>
        <member name="M:Cmn.Mis.DetailControl.SetMainKeyValue(System.String)">
            <summary>
            设置主表中主键的值
            </summary>
            <param name="mainKeyValue">主表中主键的值</param>
        </member>
        <member name="M:Cmn.Mis.DetailControl.AddCol(System.String,System.String)">
            <summary>
            添加要显示的列
            </summary>
            <param name="colName">字段名</param>
            <param name="colTitle">标题</param>
        </member>
        <member name="M:Cmn.Mis.DetailControl.AddCol(System.String,System.String,System.String)">
            <summary>
            添加要显示的列
            </summary>
            <param name="colName">字段名</param>
            <param name="colTitle">标题</param>
            <param name="colFormat">字段数据显示格式</param>
        </member>
        <member name="M:Cmn.Mis.DetailControl.AddCol(System.String,System.String,System.Int32)">
            <summary>
            增加需要显示的列
            </summary>
            <param name="colName">列字段名</param>
            <param name="colTitle">列显示标题</param>
            <param name="colWidth">列宽度</param>
        </member>
        <member name="M:Cmn.Mis.DetailControl.AddCol(System.String,System.String,System.Int32,System.Web.UI.WebControls.HorizontalAlign,System.Boolean)">
            <summary>
            增加需要显示的列
            </summary>
            <param name="colName">列字段名</param>
            <param name="colTitle">列显示标题</param>
            <param name="colWidth">列宽度</param>
            <param name="align">对齐方式</param>
            <param name="htmlEncode">是否显示html代码</param>
        </member>
        <member name="M:Cmn.Mis.DetailControl.AddCol(System.String,System.String,System.Int32,System.Web.UI.WebControls.HorizontalAlign,System.Boolean,System.Boolean)">
            <summary>
            增加需要显示的列
            </summary>
            <param name="colName">列字段名</param>
            <param name="colTitle">列显示标题</param>
            <param name="colWidth">列宽度</param>
            <param name="align">对齐方式</param>
            <param name="htmlEncode">是否显示html代码</param>
            <param name="checkIsExists">检查是否存在</param>
        </member>
        <member name="M:Cmn.Mis.DetailControl.AddCol(System.String,System.String,System.Int32,System.Web.UI.WebControls.HorizontalAlign,System.Boolean,System.Boolean,System.String)">
            <summary>
            增加需要显示的列
            </summary>
            <param name="colName">列字段名</param>
            <param name="colTitle">列显示标题</param>
            <param name="colWidth">列宽度</param>
            <param name="align">对齐方式</param>
            <param name="htmlEncode">是否显示html代码</param>
            <param name="checkIsExists">检查是否存在</param>
            <param name="colFormat">字段数据显示格式</param>
        </member>
        <member name="M:Cmn.Mis.DetailControl.AddButtonCol(System.String,System.String,System.String)">
            <summary>
            增加按钮列
            </summary>
            <param name="commandName">命令名</param>
            <param name="colTitle">列标题</param>
            <param name="buttonText">按钮标题</param>
        </member>
        <member name="M:Cmn.Mis.DetailControl.AddButtonCol(System.String,System.String,System.String,System.Web.UI.WebControls.ButtonType)">
            <summary>
            增加按钮列
            </summary>
            <param name="commandName">命令名</param>
            <param name="colTitle">列标题</param>
            <param name="buttonText">按钮标题</param>
            <param name="buttonType">按钮类型</param>
        </member>
        <member name="M:Cmn.Mis.DetailControl.LoadData(System.String)">
            <summary>
            根据主表主键载入明细表的记录
            </summary>
            <param name="mainKeyValue">主表主键的键值</param>
            <returns>返回0表示成功其它错误</returns>
        </member>
        <member name="M:Cmn.Mis.DetailControl.SaveData(System.String)">
            <summary>
            根据主表主键保存数据到明细表中
            </summary>
            <param name="mainKeyValue">主表主键的键值</param>
            <returns>返回0表示成功其它错误</returns>
        </member>
        <member name="M:Cmn.Mis.DetailControl.GetDelDataSql(System.String)">
            <summary>
            根据主表主键取得删除明细表中的记录的SQL语句
            </summary>
            <param name="mainKeyValue">主表主键的键值</param>
            <returns>删除明细表中记录</returns>
        </member>
        <member name="M:Cmn.Mis.DetailControl.DelData(System.String)">
            <summary>
            根据主表主键删除明细表中的记录
            </summary>
            <param name="mainKeyValue">主表主键的键值</param>
            <returns>返回0表示成功其它错误</returns>
        </member>
        <member name="M:Cmn.Mis.DetailControl.InitControl">
            <summary>
            初始化控件
            </summary>
        </member>
        <member name="M:Cmn.Mis.DetailControl.SetEnabled(System.Boolean)">
            <summary>
            设置是否可用
            </summary>
            <param name="value">是否可用</param>
        </member>
        <member name="M:Cmn.Mis.DetailControl.GetRowCount">
            <summary>
            取得列表中记录总行数
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.DetailControl.GetField(System.Int32,System.Int32)">
            <summary>
            取得指定行，指定列的内容
            </summary>
            <param name="rowNo">行号</param>
            <param name="fieldNo">列号</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.DetailControl.GetField(System.Int32,System.String)">
            <summary>
            取得指定行，指定列的内容
            </summary>
            <param name="rowNo">行号</param>
            <param name="colName">列名</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.DetailControl.GetField(System.String)">
            <summary>
            获取当前列的字段
            </summary>
            <param name="colName"></param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.DetailControl.SetField(System.Int32,System.Int32,System.String)">
            <summary>
            设定指定行，指定列的内容
            </summary>
            <param name="rowNo">行号</param>
            <param name="fieldNo">列号</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.DetailControl.SetField(System.Int32,System.String,System.String)">
            <summary>
            设定指定行，指定列的内容
            </summary>
            <param name="rowNo">行号</param>
            <param name="colName">列名</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.DetailControl.NewRow">
            <summary>
            列表中新加一行
            </summary>
            <returns>新加行的行号</returns>
        </member>
        <member name="M:Cmn.Mis.DetailControl.DataRefresh">
            <summary>
            数据刷新
            </summary>
        </member>
        <member name="M:Cmn.Mis.DetailControl.GetValue">
            <summary>
            取得所有控件的值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.DetailControl.SetValue(System.String)">
            <summary>
            设置值
            </summary>
            <param name="value">所有控件的值，用GetValue获得</param>
        </member>
        <member name="M:Cmn.Mis.DetailControl.ClearColumns">
            <summary>
            删除所有的列
            </summary>
        </member>
        <member name="M:Cmn.Mis.DetailControl.ClearData">
            <summary>
            清空列表中的数据
            </summary>
        </member>
        <member name="M:Cmn.Mis.DetailControl.IsModify">
            <summary>
            是否是修改记录
            </summary>
            <returns>是否是修改记录</returns>
        </member>
        <member name="E:Cmn.Mis.DetailControl.BeforeAddSave">
            <summary>
            增加记录保存前事件
            </summary>
        </member>
        <member name="E:Cmn.Mis.DetailControl.AfterAddClick">
            <summary>
            增加按钮点击后事件
            </summary>
        </member>
        <member name="E:Cmn.Mis.DetailControl.BeforeModifySave">
            <summary>
            修改记录保存前事件
            </summary>
        </member>
        <member name="E:Cmn.Mis.DetailControl.AfterModifyClick">
            <summary>
            修改按钮点击后事件
            </summary>
        </member>
        <member name="E:Cmn.Mis.DetailControl.BeforeAddClick">
            <summary>
            增加按钮点击前事件
            </summary>
        </member>
        <member name="E:Cmn.Mis.DetailControl.BeforeModifyClick">
            <summary>
            修改按钮点击前事件
            </summary>
        </member>
        <member name="E:Cmn.Mis.DetailControl.BeforeDeleteClick">
            <summary>
            删除按钮点击前事件
            </summary>
        </member>
        <member name="E:Cmn.Mis.DetailControl.RowCommand">
            <summary>
            GridView行命令事件
            </summary>
        </member>
        <member name="E:Cmn.Mis.DetailControl.RowDataBound">
            <summary>
            GridView行数据绑定
            </summary>
        </member>
        <member name="E:Cmn.Mis.DetailControl.EditComplete">
            <summary>
            明细编辑完成事件，返回主界面的时候触发
            </summary>
        </member>
        <member name="P:Cmn.Mis.DetailControl.Title">
            <summary>
            标题
            </summary>
        </member>
        <member name="P:Cmn.Mis.DetailControl.MainKeyValue">
            <summary>
            主键的值
            </summary>
        </member>
        <member name="P:Cmn.Mis.DetailControl.SubKeyField">
            <summary>
            主键2的字段名
            </summary>
        </member>
        <member name="P:Cmn.Mis.DetailControl.SubKeyValue">
            <summary>
            主键2的值
            </summary>
        </member>
        <member name="P:Cmn.Mis.DetailControl.PopWinWidth">
            <summary>
            弹出框的宽度
            </summary>
        </member>
        <member name="P:Cmn.Mis.DetailControl.PopWinHeight">
            <summary>
            弹出框的高度
            </summary>
        </member>
        <member name="T:Cmn.Mis.DetailControl.EventBefore">
            <summary>
            Before事件定义
            </summary>
            <param name="sender">事件发送者</param>
            <param name="e">事件参数</param>
            <param name="ExecuteDefault">是否执行默认的代码</param>
        </member>
        <member name="T:Cmn.OleDB">
            <summary>
            数据库操作类
            </summary>
        </member>
        <member name="F:Cmn.OleDB.errorMessage">
            <summary>
            返回数据库操作出错信息
            </summary>
        </member>
        <member name="M:Cmn.OleDB.execSql(System.String)">
            <summary>
            运行SQL角本
            </summary>
            <param name="strSql">SQL角本串</param>
            <returns>返回操作是否成功</returns>
        </member>
        <member name="M:Cmn.OleDB.execSql(System.String,System.String)">
            <summary>
            执行SQL
            </summary>
            <param name="sqlConn">数据库连接</param>
            <param name="strSql">SQL角本串</param>
            <returns>返回操作是否成功</returns>
        </member>
        <member name="M:Cmn.OleDB.execSql(System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            运行SQL角本
            </summary>
            <param name="strSql">SQL角本串</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回操作是否成功</returns>
        </member>
        <member name="M:Cmn.OleDB.execSql(System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            运行SQL角本
            </summary>
            <param name="commandType">CommandType</param>
            <param name="strSql">SQL角本串</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回操作是否成功</returns>
        </member>
        <member name="M:Cmn.OleDB.execSql(System.String,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            运行SQL角本
            </summary>
            <param name="connStr">connStr</param>
            <param name="commandType">CommandType</param>
            <param name="strSql">SQL角本串</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回操作是否成功</returns>
        </member>
        <member name="M:Cmn.OleDB.getDataSet(System.String)">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="strSql">SQL查询角本串</param>
            <returns>返回记录集存入DataSet</returns>
        </member>
        <member name="M:Cmn.OleDB.getDataSet(System.String,System.String)">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="connStr">连接字符串</param>
            <param name="strSql">SQL查询角本串</param>
            <returns>返回记录集存入DataSet</returns>
        </member>
        <member name="M:Cmn.OleDB.getDataSet(System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="strSql">strSql</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回记录集存入DataSet</returns>
        </member>
        <member name="M:Cmn.OleDB.getDataSet(System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="commandType">CommandType</param>
            <param name="strSql">strSql</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回记录集存入DataSet</returns>
        </member>
        <member name="M:Cmn.OleDB.getDataSet(System.String,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="connStr">connStr</param>
            <param name="commandType">CommandType</param>
            <param name="strSql">strSql</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回记录集存入DataSet</returns>
        </member>
        <member name="M:Cmn.OleDB.getDataTable(System.String)">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="strSql">SQL查询角本串</param>
            <returns>返回记录集存入DataTable</returns>
        </member>
        <member name="M:Cmn.OleDB.getDataTable(System.String,System.String)">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="sqlConn">数据库连接</param>
            <param name="strSql">SQL查询角本串</param>
            <returns>返回记录集存入DataTable</returns>
        </member>
        <member name="M:Cmn.OleDB.getDataTable(System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="strSql">strSql</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回记录集存入DataTable</returns>
        </member>
        <member name="M:Cmn.OleDB.getDataTable(System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="commandType">CommandType</param>
            <param name="strSql">strSql</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回记录集存入DataTable</returns>
        </member>
        <member name="M:Cmn.OleDB.getDataTable(System.String,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="connStr">connStr</param>
            <param name="commandType">CommandType</param>
            <param name="strSql">strSql</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回记录集存入DataTable</returns>
        </member>
        <member name="M:Cmn.OleDB.getFieldValue(System.String)">
            <summary>
            条件返回指定字段的值
            </summary>
            <param name="strSql">SQL查询角本串</param>
            <returns>返回字段的值</returns>
        </member>
        <member name="M:Cmn.OleDB.getFieldValue(System.String,System.String)">
            <summary>
            条件返回指定字段的值
            </summary>
            <param name="connStr">连接字符串</param>
            <param name="strSql">SQL查询角本串</param>
            <returns>返回字段的值</returns>
        </member>
        <member name="M:Cmn.OleDB.getFieldValue(System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            条件返回指定字段的值
            </summary>
            <param name="strSql">strSql</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回字段的值</returns>
        </member>
        <member name="M:Cmn.OleDB.getFieldValue(System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            条件返回指定字段的值
            </summary>
            <param name="commandType">CommandType</param>
            <param name="strSql">strSql</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回字段的值</returns>
        </member>
        <member name="M:Cmn.OleDB.getFieldValue(System.String,System.Data.CommandType,System.String,System.Data.OleDb.OleDbParameter[])">
            <summary>
            条件返回指定字段的值
            </summary>
            <param name="connStr">connStr</param>
            <param name="commandType">CommandType</param>
            <param name="strSql">strSql</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回字段的值</returns>
        </member>
        <member name="M:Cmn.OleDB.getFieldValue(System.Data.DataTable,System.Int32,System.String)">
            <summary>
            从DataTable的某一行中取得某个字段
            </summary>
            <param name="dt">DataTable</param>
            <param name="rowNo">行号</param>
            <param name="fieldName">字段名</param>
            <returns>字段内容</returns>
        </member>
        <member name="M:Cmn.OleDB.getFieldValue(System.Data.DataTable,System.Int32,System.Int32)">
            <summary>
            从DataTable的某一行中取得某个字段
            </summary>
            <param name="dt">DataTable</param>
            <param name="rowNo">行号</param>
            <param name="colNo">列号</param>
            <returns>字段内容</returns>
        </member>
        <member name="M:Cmn.OleDB.getTableAllField(System.String)">
            <summary>
            取一个表中的所有字段名
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Cmn.OleDB.getTableKey(System.String)">
            <summary>
            取一个表中的第一个字段为主键
            </summary>
            <param name="tableName">表名</param>
            <returns>第一个字段（主键）</returns>
        </member>
        <member name="M:Cmn.OleDB.doWriteLog(System.String,System.String)">
            <summary>
            写数据库操作日志
            </summary>
            <param name="_strSql">出错SQL</param>
            <param name="_Msg">出错消息</param>
        </member>
        <member name="T:Cmn.ErrorMsg">
            <summary>
            错误信息类（用于错误的时候提示用户）
            </summary>
        </member>
        <member name="M:Cmn.ErrorMsg.Add(System.String)">
             <summary>
            增加一个错误信息 
             </summary>
             <param name="errorMsg">错误信息</param>
        </member>
        <member name="M:Cmn.ErrorMsg.Get">
            <summary>
            获取错误信息
            </summary>
            <returns>错误信息</returns>
        </member>
        <member name="M:Cmn.Mis.LoginManage.Login(System.String,System.String)">
            <summary>
            用户登录
            </summary>
            <param name="userName">用户名</param>
            <param name="passWord">密码</param>
            <returns>空：登录成功；如果有字符串代表登录失败（字符串为失败原因）</returns>
        </member>
        <member name="M:Cmn.Mis.LoginManage.IsLogin">
            <summary>
            判断是否处于登录状态
            </summary>
            <returns>空为处于登录状态；如果有字符串代表非登录状态（字符串为原因）</returns>
        </member>
        <member name="M:Cmn.Mis.LoginManage.LoginOut">
            <summary>
            退出登录
            </summary>
            <returns>是否成功</returns>
        </member>
        <member name="M:Cmn.Mis.LoginManage.IsOnline(System.String)">
            <summary>
            用户是否在线
            </summary>
            <param name="userID">用户代码</param>
            <returns>是否在线</returns>
        </member>
        <member name="T:Cmn.Mis.LoginManage.LoginUserInfo">
            <summary>
            登录用户的信息
            </summary>
        </member>
        <member name="T:Cmn.Mis.TableOpt">
            <summary>
            单表操作
            </summary>
        </member>
        <member name="M:Cmn.Mis.TableOpt.CheckTableInfo(Cmn.Cls.TableInfo)">
            <summary>
            检验TableInfo数据是否正确，并将不正确的全部清除
            </summary>
            <param name="tableInfo">表信息</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.TableOpt.CastValue(System.String)">
            <summary>
            在数据保存
            </summary>
            <param name="value">值</param>
            <returns>转换后的值</returns>
        </member>
        <member name="M:Cmn.Mis.TableOpt.Insert(Cmn.Cls.TableInfo)">
            <summary>
            添加数据
            </summary>
            <returns>0操作成功/-1表名不能为空/-5字段名不存在此表中/-6执行SQL时出错</returns>
            <example>
            <code>
            </code>
            </example>
        </member>
        <member name="M:Cmn.Mis.TableOpt.Insert(Cmn.Cls.TableInfo,System.String@)">
            <summary>
            添加记录
            </summary>
            <param name="tableInfo">表信息</param>
            <param name="identity">插入后的唯一标识码</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.TableOpt.UpdateWhere(Cmn.Cls.TableInfo,System.String)">
            <summary>
            修改数据
            </summary>
            <returns>0操作成功/-1表名不能为空/-5字段名不存在此表中/-6执行SQL时出错</returns>
            <example>
            <code>
            </code>
            </example>
        </member>
        <member name="M:Cmn.Mis.TableOpt.Update(Cmn.Cls.TableInfo,System.String)">
            <summary>
            修改数据
            </summary>
            <param name="tableInfo"></param>
            <param name="keyValue"></param>
            <returns>0操作成功/-1表名不能为空/-2主键不能为空/-5字段名不存在此表中/-6执行SQL时出错</returns>
        </member>
        <member name="M:Cmn.Mis.TableOpt.Update(Cmn.Cls.TableInfo,System.String,System.String)">
            <summary>
            修改数据
            </summary>
            <returns>0操作成功/-1表名不能为空/-2主键不能为空/-5字段名不存在此表中/-6执行SQL时出错</returns>
            <example>
            <code>
            </code>
            </example>
        </member>
        <member name="M:Cmn.Mis.TableOpt.DeleteWhere(Cmn.Cls.TableInfo,System.String)">
            <summary>
            删除数据
            </summary>
            <returns>0操作成功/-1表名不能为空/-6执行SQL时出错</returns>
            <example>
            <code>
            </code>
            </example>
        </member>
        <member name="M:Cmn.Mis.TableOpt.GetDeleteSql(Cmn.Cls.TableInfo,System.String)">
            <summary>
            取得删除数据的SQL语句
            </summary>
            <param name="tableInfo">删除主键的值</param>
            <param name="keyValue">要删除记录主键的值</param>
            <returns>删除数据的SQL语句，如果错误返回空字符串</returns>
        </member>
        <member name="M:Cmn.Mis.TableOpt.Delete(Cmn.Cls.TableInfo,System.String)">
            <summary>
            删除数据
            </summary>
            <param name="tableInfo"></param>
            <param name="keyValue">删除主键的值</param>
            <returns>0操作成功/-1表名不能为空/-2主键不能为空/-6执行SQL时出错</returns>
            <example>
            <code>
            </code>
            </example>
        </member>
        <member name="M:Cmn.Mis.TableOpt.GetTableInfo(System.Web.UI.Control,Cmn.Cls.TableInfo)">
            <summary>
            从控件列表中取TableInfo
            </summary>
            <param name="control">控件容器</param>
            <param name="tableInfo">表的信息</param>
        </member>
        <member name="M:Cmn.Mis.TableOpt.GetTableInfo(Cmn.Cls.TableInfo,System.String)">
            <summary>
            根据主键取某一个记录
            </summary>
            <param name="tableInfo"></param>
            <param name="keyValue"></param>
        </member>
        <member name="M:Cmn.Mis.TableOpt.GetTableInfo(Cmn.Cls.TableInfo,System.Web.UI.WebControls.GridView)">
            <summary>
            从GridView获取数据，存放到TableInfo
            </summary>
            <param name="tableInfo"></param>
            <param name="gridView"></param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.TableOpt.GetTableInfo(Cmn.Cls.TableInfo,System.Data.DataTable,System.Int32)">
            <summary>
            从DataTable取得某一行数据，存放到TableInfo
            </summary>
            <param name="tableInfo"></param>
            <param name="dataTable"></param>
            <param name="rowIndex">行号</param>
            <returns>0:正确，其它错误</returns>
        </member>
        <member name="M:Cmn.Mis.TableOpt.SetControlValue(System.Web.UI.Control,Cmn.Cls.TableInfo)">
            <summary>
            根据tableInfo设置控件列表的值
            </summary>
            <param name="control">控件容器</param>
            <param name="tableInfo">表的信息</param>
        </member>
        <member name="T:Cmn.Cls.TableInfo">
            <summary>
            通用表信息
            </summary>
        </member>
        <member name="P:Cmn.Cls.TableInfo.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:Cmn.Cls.TableInfo.KeyField">
            <summary>
            主键
            </summary>
        </member>
        <member name="P:Cmn.Cls.TableInfo.FieldValueList">
            <summary>
            所有字段列表
            </summary>
        </member>
        <member name="T:Cmn.Log">
            <summary>
            日志管理类
            </summary>
        </member>
        <member name="M:Cmn.Log.Write(System.String,System.String)">
            <summary>
            写日志
            </summary>
            <param name="logFileName">文件名 绝对目录</param>
            <param name="strings">消息</param>
        </member>
        <member name="M:Cmn.Log.Write(System.String,System.String,System.String)">
            <summary>
            写日志gb2312 UTF-8
            </summary>
            <param name="_fileName">文件</param>
            <param name="_string">消息</param>
            <param name="_encoding">编码gb2312 UTF-8</param>
        </member>
        <member name="M:Cmn.Log.Write(System.String)">
            <summary>
            写日志，保存在执行文件当前目录的log目录下
            </summary>
            <param name="txt">消息内容</param>
        </member>
        <member name="T:Cmn.Cls.Watermark">
            <summary>
            添加水印类 只支持添加图片水印
            </summary>
        </member>
        <member name="M:Cmn.Cls.Watermark.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Cmn.Cls.Watermark.DrawImage">
            <summary>
            开始绘制水印
            </summary>
        </member>
        <member name="P:Cmn.Cls.Watermark.ModifyImagePath">
            <summary>
            获取或设置要修改的图像路径
            </summary>
        </member>
        <member name="P:Cmn.Cls.Watermark.DrawedImagePath">
            <summary>
            获取或设置在画的图片路径(水印图片)
            </summary>
        </member>
        <member name="P:Cmn.Cls.Watermark.RightSpace">
            <summary>
            获取或设置水印在修改图片中的右边距
            </summary>
        </member>
        <member name="P:Cmn.Cls.Watermark.BottoamSpace">
            <summary>
            获取或设置水印在修改图片中距底部的高度
            </summary>
        </member>
        <member name="P:Cmn.Cls.Watermark.LucencyPercent">
            <summary>
            获取或设置要绘制水印的透明度,注意是原来图片透明度的百分比
            </summary>
        </member>
        <member name="P:Cmn.Cls.Watermark.OutPath">
            <summary>
            获取或设置要输出图像的路径
            </summary>
        </member>
        <member name="T:Cmn.AppConfig">
            <summary>
            应用程序的配置
            </summary>
        </member>
        <member name="M:Cmn.AppConfig.GetAppPath">
            <summary>
            取得应用程序的路径
            </summary>
            <returns>应用程序的根目录</returns>
        </member>
        <member name="T:Cmn.Mis.BasControl">
            <summary>
            管理系统中所有简单用户控件的基类，所有简单用户控件都从这个类继承，
            并实现SetValue和GetValue两个方法
            </summary>
        </member>
        <member name="M:Cmn.Mis.BasControl.SetValue(System.String)">
            <summary>
            设置控件的值
            </summary>
            <param name="value">值</param>
        </member>
        <member name="M:Cmn.Mis.BasControl.GetValue">
            <summary>
            取控件的值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.BasControl.SetEnabled(System.Boolean)">
            <summary>
            设置控件的Enabled属性
            </summary>
            <param name="value">是否可用</param>
        </member>
        <member name="M:Cmn.Mis.BasControl.InitControl">
            <summary>
            初始化控件
            </summary>
        </member>
        <member name="M:Cmn.Mis.BasControl.GetDesc(System.String@,System.String@)">
            <summary>
            取得描述字段的名称和值
            </summary>
        </member>
        <member name="M:Cmn.Mis.BasControl.SetFocus">
            <summary>
            设置焦点
            </summary>
        </member>
        <member name="M:Cmn.Mis.BasControl.ReLoadData">
            <summary>
            重新读入数据（刷新数据）
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cmn.Mis.ManageDetailEventArgs">
            <summary>
            点击管理明细页的事件参数
            </summary>
        </member>
        <member name="F:Cmn.Mis.ManageDetailEventArgs.DetailPageUrl">
            <summary>
            明细页面的Url
            </summary>
        </member>
        <member name="F:Cmn.Mis.ManageDetailEventArgs.DetailPageTitle">
            <summary>
            明细页面标题
            </summary>
        </member>
        <member name="T:Cmn.Mis.DetailPanel">
            <summary>
            修改和增加界面上的明细数据
            </summary>
        </member>
        <member name="M:Cmn.Mis.DetailPanel.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Cmn.Mis.DetailPanel.SetCondition(System.String)">
            <summary>
            设置明细表记录筛选条件
            </summary>
            <param name="condition"></param>
        </member>
        <member name="T:Cmn.Mis.TablePageMain">
            <summary>
            主数据页面
            </summary>
        </member>
        <member name="M:Cmn.Mis.TablePageMain.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Cmn.Mis.TablePageMain.ToManageDetail(System.Int32,System.String,System.String)">
            <summary>
            跳转到某一行对应的明细数据管理
            </summary>
            <param name="rowNo">行号</param>
            <param name="detailPageUrl">明细页Url</param>
            <param name="detailPageTitle">明细页标题</param>
        </member>
        <member name="M:Cmn.Mis.TablePageMain.AddDetailPage(System.String,System.String)">
            <summary>
            设置明细页Url，每次PageLoad需要执行一下，不能只有第一次执行
            </summary>
            <param name="detailPageUrl">数据明细页Url</param>
            <param name="detailPageTitle">数据明细页标题</param>
        </member>
        <member name="M:Cmn.Mis.TablePageMain.AddDetailPage(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            设置明细页Url，每次PageLoad需要执行一下，不能只有第一次执行
            </summary>
            <param name="detailPageUrl">数据明细页Url</param>
            <param name="detailPageTitle">数据明细页标题</param>
            <param name="width">宽度</param>
            <param name="height">高度</param>
        </member>
        <member name="T:Cmn.Func">
            <summary>
            共用函数库
            </summary>
        </member>
        <member name="M:Cmn.Func.GetDiskVolumeSerialNumber">
            <summary>
            C盘序列号
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cmn.Func.GetNetCardMacAddress">
            <summary>
            获取MAC地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cmn.Func.AddParamToUrl(System.String,System.String)">
            <summary>
            Url中增加参数
            </summary>
            <param name="url">Url网址</param>
            <param name="param">要加的参数（包括键和值）</param>
            <returns>加好参数的Url</returns>
        </member>
        <member name="M:Cmn.Func.DelParamFromUrl(System.String,System.String)">
            <summary>
            从Url中删除某个参数
            </summary>
            <param name="url">Url网址</param>
            <param name="param">参数（只要键不需要值）</param>
            <returns>删除参数后的Url</returns>
        </member>
        <member name="M:Cmn.Func.SetSessionCookies(System.String,System.String)">
            <summary>
            设置Session和Cookies
            </summary>
            <param name="key">键</param>
            <param name="value">值</param>
            <returns>是否设置成功</returns>
        </member>
        <member name="M:Cmn.Func.GetSessionCookies(System.String)">
            <summary>
            获取某个键的值(从Session和Cookies)
            </summary>
            <param name="key">键</param>
            <returns>值</returns>
        </member>
        <member name="M:Cmn.Func.ClearSessionCookies(System.String)">
            <summary>
            清除某个键（从Session和Cookies）
            </summary>
            <param name="key">键</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Cmn.Func.SetUserID(System.String)">
            <summary>
            保存用户ID到Session和Cookies
            </summary>
            <param name="userID">用户ID</param>
            <returns>保存是否成功</returns>
        </member>
        <member name="M:Cmn.Func.GetUserID">
            <summary>
            获取用户ID（从Session或Cookies）
            </summary>
            <returns>用户ID</returns>
        </member>
        <member name="M:Cmn.Func.ClearUserID">
            <summary>
            从Session和Cookies中清除用户ID
            </summary>
            <returns>清除是否成功</returns>
        </member>
        <member name="M:Cmn.Func.GetRootUrl">
            <summary>
            获取当前网站的根目录（如果是虚拟目录的话包含虚拟目录，末尾"/"已经包含）
            </summary>
            <returns>获取当前网站的根目录（如果是虚拟目录的话包含虚拟目录，末尾"/"已经包含）</returns>
        </member>
        <member name="M:Cmn.Func.GetRootUrl(System.Web.UI.Page)">
            <summary>
            获取当前网站的根目录（如果是虚拟目录的话包含虚拟目录，末尾"/"已经包含）
            </summary>
            <param name="page">页面</param>
            <returns>获取当前网站的根目录（如果是虚拟目录的话包含虚拟目录，末尾"/"已经包含）</returns>
        </member>
        <member name="M:Cmn.Func.AddRootUrl(System.Web.UI.Page,System.String)">
            <summary>
            url前增加网站根目录
            </summary>
            <param name="page">页面</param>
            <param name="url">url</param>
            <returns>加好根目录的url</returns>
        </member>
        <member name="M:Cmn.Func.AddRootUrl(System.String)">
            <summary>
            url前增加网站根目录
            </summary>
            <param name="url">url</param>
            <returns>加好根目录的url</returns>
        </member>
        <member name="T:Cmn.Msg">
            <summary>
            输出消息类
            </summary>
        </member>
        <member name="M:Cmn.Msg.Write(System.String)">
            <summary>
            输出消息
            </summary>
            <param name="msg">消息内容</param>
        </member>
        <member name="M:Cmn.Msg.Write(System.Web.UI.HtmlControls.HtmlGenericControl,System.String,System.Boolean)">
            <summary>
            输出消息到HtmlGenericControl控件
            </summary>
            <param name="control">HtmlGenericControl控件</param>
            <param name="msg">消息内容</param>
            <param name="isAdd">是否累记</param>
        </member>
        <member name="M:Cmn.Msg.End">
            <summary>
            终止页面的运行
            </summary>
        </member>
        <member name="T:Cmn.VerifyCode">
            <summary>
            验证码
            </summary>
        </member>
        <member name="M:Cmn.VerifyCode.Draw">
            <summary>
            画验证码并输出到页面（默认4个字符长度，背景色为白色）
            </summary>
        </member>
        <member name="M:Cmn.VerifyCode.Draw(System.String)">
            <summary>
            画验证码并输出到页面（默认背景色为白色）
            </summary>
            <param name="verifyCode">验证码</param>
        </member>
        <member name="M:Cmn.VerifyCode.Draw(System.String,System.Drawing.Color)">
            <summary>
            画验证码并输出到页面
            </summary>
            <param name="verifyCode">验证码</param>
            <param name="bgColor">背景颜色</param>
        </member>
        <member name="M:Cmn.VerifyCode.Draw(System.String,System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            画验证码并输出到页面
            </summary>
            <param name="verifyCode">验证码</param>
            <param name="frontNoise">前景噪音点</param>
            <param name="bgNoise">背景噪音点</param>
            <param name="bgColor">背景颜色</param>
        </member>
        <member name="M:Cmn.VerifyCode.Create(System.Int32)">
            <summary>
            取得随机字符串，并设置Session值
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:Cmn.VerifyCode.Get">
            <summary>
            获取生成的验证码
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cmn.VerifyCode.Check(System.String)">
            <summary>
            验证用户输入的验证码是否正确
            </summary>
            <param name="verifyCode"></param>
            <returns></returns>
        </member>
        <member name="T:Cmn.Cookies">
            <summary>
            Cookies操作类，支持读写Cookies操作
            </summary>
        </member>
        <member name="M:Cmn.Cookies.Set(System.String,System.String)">
            <summary>
            设置cookies
            </summary>
            <param name="infoName">名称</param>
            <param name="infoValue">值</param>
        </member>
        <member name="M:Cmn.Cookies.Set(System.String,System.String,System.Int32)">
            <summary>
            设置cookies
            </summary>
            <param name="infoName">名称</param>
            <param name="infoValue">值</param>
            <param name="days">有效天数</param>
        </member>
        <member name="M:Cmn.Cookies.Set(System.String,System.String,System.String)">
            <summary>
            设置cookies
            </summary>
            <param name="domain">域名比如“bendihui.com”</param>
            <param name="infoName">名称</param>
            <param name="infoValue">值</param>
        </member>
        <member name="M:Cmn.Cookies.Set(System.String,System.String,System.String,System.Int32)">
            <summary>
            设置cookies
            </summary>
            <param name="domain">域名比如“bendihui.com”</param>
            <param name="infoName">名称</param>
            <param name="infoValue">值</param>
            <param name="days">天数</param>
        </member>
        <member name="M:Cmn.Cookies.Get(System.String)">
            <summary>
            取cookies
            </summary>
            <param name="infoName">名称</param>
            <returns>值，如果没有取到返回空</returns>
        </member>
        <member name="M:Cmn.Cookies.Clear(System.String,System.String)">
             <summary>
            清除cookies 
             </summary>
             <param name="domain">域名比如“bendihui.com”</param>
             <param name="infoName">名称</param>
        </member>
        <member name="M:Cmn.Cookies.Clear(System.String)">
            <summary>
            清除cookies
            </summary>
            <param name="infoName">名称</param>
        </member>
        <member name="T:Cmn.Cls.Xml">
            <summary>
            Xml操作类
            </summary>
        </member>
        <member name="M:Cmn.Cls.Xml.#ctor(System.String)">
            <summary>
            构造器
            </summary>
            <param name="XmlFile"></param>
        </member>
        <member name="M:Cmn.Cls.Xml.getData">
            <summary>
            返回XML文件所有数据
            </summary>
            <returns>DataSet</returns>
        </member>
        <member name="M:Cmn.Cls.Xml.getData(System.String)">
            <summary>
            返回指定结点的所有数据
            </summary>
            <param name="Node">结点</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Cmn.Cls.Xml.getNodeText(System.String)">
            <summary>
            取结点的内容
            </summary>
            <param name="Node">结点</param>
            <returns>内容</returns>
        </member>
        <member name="M:Cmn.Cls.Xml.setNodeText(System.String,System.String)">
            <summary>
            重新设置结点的内容
            </summary>
            <param name="Node">结点</param>
            <param name="Content">内容</param>
        </member>
        <member name="M:Cmn.Cls.Xml.addNode(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            添加有内容的结点。属性名，属性值支持用“|”分开的字符串
            </summary>
            <param name="MainNode">当前结点</param>
            <param name="Node">新结点名</param>
            <param name="attributeName">属性名</param>
            <param name="attributeValue">属性值</param>
            <param name="Content">内容</param>
        </member>
        <member name="M:Cmn.Cls.Xml.addNode(System.String,System.String,System.String,System.String)">
            <summary>
            添加无内容的结点。属性名，属性值支持用“|”分开的字符串
            </summary>
            <param name="MainNode">当前结点</param>
            <param name="Node">新结点名</param>
            <param name="attributeName">属性名</param>
            <param name="attributeValue">属性值</param>
        </member>
        <member name="M:Cmn.Cls.Xml.getAttr(System.String,System.String)">
            <summary>
            取指定结点的属性值，属性名支持用“|”分开的字符串
            </summary>
            <param name="Node">结点</param>
            <param name="attributeName">属性名</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Cls.Xml.addAttr(System.String,System.String,System.String)">
            <summary>
            为指定结点添加新的属性值，如果存在则不添加。属性名，属性值支持用“|”分开的字符串
            </summary>
            <param name="Node">结点</param>
            <param name="attributeName">属性名</param>
            <param name="attributeValue">属性值</param>
        </member>
        <member name="M:Cmn.Cls.Xml.setAttr(System.String,System.String,System.String)">
            <summary>
            设置指定的属性值,此属性必需存在。属性名，属性值支持用“|”分开的字符串
            </summary>
            <param name="Node">结点</param>
            <param name="attributeName">属性名</param>
            <param name="attributeValue">属性值</param>
        </member>
        <member name="M:Cmn.Cls.Xml.Save">
            <summary>
            保存XML文件
            </summary>
        </member>
        <member name="P:Cmn.Cls.Xml.State">
            <summary>
            返回操作状态
            </summary>
        </member>
        <member name="T:Cmn.Mis.PageState">
            <summary>
            页面状态类，用于保存保存和载入页面状态
            </summary>
        </member>
        <member name="F:Cmn.Mis.PageState._ViewState">
            <summary>
            页面状态
            </summary>
        </member>
        <member name="F:Cmn.Mis.PageState._PageIndex">
            <summary>
            第几页
            </summary>
        </member>
        <member name="F:Cmn.Mis.PageState._SelectedIndex">
            <summary>
            第几行
            </summary>
        </member>
        <member name="M:Cmn.Mis.PageState.Get(Cmn.Mis.TablePage)">
            <summary>
            取得页面状态
            </summary>
            <param name="tablePage"></param>
        </member>
        <member name="M:Cmn.Mis.PageState.Set(Cmn.Mis.TablePage)">
            <summary>
            设置页面状态
            </summary>
            <param name="tablePage"></param>
        </member>
        <member name="T:Cmn.Mis.ErrorMsg">
            <summary>
            错误信息
            </summary>
        </member>
        <member name="M:Cmn.Mis.ErrorMsg.Get(Cmn.Mis.TablePage)">
            <summary>
            获取错误信息
            </summary>
            <param name="page">TablePage</param>
            <returns>错误信息</returns>
        </member>
        <member name="M:Cmn.Mis.ErrorMsg.Replace(System.String,System.String,System.String)">
            <summary>
            字符串替换
            </summary>
            <param name="str">字符串</param>
            <param name="oldStr">旧的字符串</param>
            <param name="newStr">新的字符串</param>
            <returns>替换后的字符串</returns>
        </member>
        <member name="T:Cmn.Str">
            <summary>
            字符串操作类
            </summary>
        </member>
        <member name="M:Cmn.Str.GetStr(System.String,System.Int32,System.Boolean)">
            <summary>
            截取字符串长度
            </summary>
            <param name="str">要截取的字符串</param>
            <param name="length">字符串长度</param>
            <param name="flg">true:加...,flase:不加</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Str.cnLength(System.String)">
            <summary>
            返回中文字符的长度
            </summary>
            <param name="str">字符串</param>
            <returns>返回中文字符的长度</returns>
        </member>
        <member name="M:Cmn.Str.CutStr(System.String,System.Int32)">
            <summary>
            截取字符串+…
            </summary>
            <param name="strInput"></param>
            <param name="intlen"></param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Str.isMatch(System.String,System.String)">
            <summary>
            是否匹配正则表达式
            </summary>
            <param name="op">表达式</param>
            <param name="str">字符串</param>
            <returns>完全匹配返回真</returns>
        </member>
        <member name="M:Cmn.Str.UrlEncoding(System.String)">
            <summary>
            URL编码
            </summary>
            <param name="str">字符串</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Str.HtmlEncode(System.String)">
            <summary>
            HTML Encode
            </summary>
            <param name="strInput">HTML代码</param>
            <returns>HtmlEncode</returns>
        </member>
        <member name="M:Cmn.Str.HtmlDecode(System.String)">
            <summary>
            HTML Decode
            </summary>
            <param name="strInput">HTML代码</param>
            <returns>HtmlDecode</returns>
        </member>
        <member name="M:Cmn.Str.GetFileExtends(System.String)">
            <summary>
            取文件扩展名
            </summary>
            <param name="fileName">文件URL</param>
            <returns>文件扩展名</returns>
        </member>
        <member name="M:Cmn.Str.GetFileNameFromPath(System.String)">
            <summary>
            从路径中获取文件名
            </summary>
            <param name="path">路径</param>
            <returns>文件名</returns>
        </member>
        <member name="M:Cmn.Str.GetRegexValue(System.String,System.String)">
            <summary>
            执行正则提取出值 GetregValue("<title>.+?</title>",htmlCode)
            </summary>
            <param name="regexString">正则表达式</param>
            <param name="htmlCode">HTML代码</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Str.Replace(System.String,System.String,System.String)">
            <summary>
            用正则替换字符串中的子串
            </summary>
            <param name="sourceStr">原字符串</param>
            <param name="regex">正则表达式</param>
            <param name="replaceStr">要将替换成的字符串</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Str.RemoveHTML(System.String)">
            <summary>
            删除HTML源代码
            </summary>
            <param name="htmlCode">html源代码</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Str.RemoveHTML(System.String,System.String)">
            <summary>
            删除HTML源代码
            </summary>
            <param name="htmlCode">html源代码</param>
            <param name="newlineSign">换行符（如：\n或<br/>等）</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:Cmn.Str.RemoveHTML(System.String,System.String,System.Boolean)”忽略有格式错误的 XML 注释 -->
        <member name="M:Cmn.Str.GetHref(System.String)">
            <summary>
            获取页面的链接正则 GetHref(htmlCode);
            </summary>
            <param name="htmlCode"></param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Str.GetImgSrc(System.String,System.String)">
            <summary>
            匹配页面的图片地址 GetImgSrc(htmlCode,"http://www.baidu.com/");当比如:&lt;img src="bb/x.gif">则要补充http://www.baidu.com/,当包含http信息时,则可以为空
            </summary>
            <param name="htmlCode"></param>
            <param name="imgHttp">要补充的http://路径信息</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Str.GetImg(System.String,System.String)">
            <summary>
            匹配<img src="" />中的图片路径实际链接
            </summary>
            <param name="imgString"><img src="" />字符串</param>
            <param name="imgHttp">前面URL</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Str.RegReplace(System.String,System.String,System.String)">
            <summary>
            替换通过正则获取字符串所带的正则首尾匹配字符串
            </summary>
            <param name="regValue">要替换的值</param>
            <param name="regStart">正则匹配的首字符串</param>
            <param name="regEnd">正则匹配的尾字符串</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Str.ReplaceEnter(System.String)">
            <summary>
            替换网页中的换行和引号
            </summary>
            <param name="htmlCode">HTML源代码</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Str.ToInt(System.Object,System.Int32)">
            <summary>
            string型转换为int型
            </summary>
            <param name="strValue">要转换的字符串</param>
            <param name="defValue">缺省值</param>
            <returns>转换后的int类型结果</returns>
        </member>
        <member name="M:Cmn.Str.ToFloat(System.String)">
            <summary>
            string型转换为float型
            </summary>
            <param name="str">要转换的字符串</param>
            <returns>转换后的float型值</returns>
        </member>
        <member name="M:Cmn.Str.ToDouble(System.String)">
            <summary>
            string类型转换为float类型
            </summary>
            <param name="str">要转换的字符串</param>
            <returns>转换后的double型值</returns>
        </member>
        <member name="M:Cmn.Str.GetSubString(System.String,System.Int32,System.String)">
            <summary>
            字符串如果操过指定长度则将超出的部分用指定字符串代替
            </summary>
            <param name="p_SrcString">要检查的字符串</param>
            <param name="p_Length">指定长度</param>
            <param name="p_TailString">用于替换的字符串</param>
            <returns>截取后的字符串</returns>
        </member>
        <member name="M:Cmn.Str.GetSubString(System.String,System.String,System.String)">
            <summary>
            根据前后缀获取字符串（不包括前后缀，并且是匹配到前缀后最近匹配的后缀）
            </summary>
            <param name="srcString">源字符串</param>
            <param name="prefixStr">字符串前缀（如果为空的话，从第一个字符开始）</param>
            <param name="suffixStr">字符串后缀（如果为空的话，取到最后一个字符）</param>
            <returns>前后缀之间的字符串 </returns>
        </member>
        <member name="M:Cmn.Str.GetSubString(System.String,System.String,System.String,System.StringComparison)">
            <summary>
            根据前后缀获取字符串（不包括前后缀，并且是匹配到前缀后最近匹配的后缀）
            </summary>
            <param name="srcString">源字符串</param>
            <param name="prefixStr">字符串前缀（如果为空的话，从第一个字符开始）</param>
            <param name="suffixStr">字符串后缀（如果为空的话，取到最后一个字符）</param>
            <param name="stringComparison">是否大小写敏感</param>
            <returns>前后缀之间的字符串</returns>
        </member>
        <member name="M:Cmn.Str.DelSubString(System.String,System.String,System.String)">
            <summary>
            根据前后缀删除字符串（包括前后缀，并且是匹配到前缀后最近匹配的后缀）
            </summary>
            <param name="srcString">源字符串</param>
            <param name="prefixStr">字符串前缀（如果为空的话，从第一个字符开始）</param>
            <param name="suffixStr">字符串后缀（如果为空的话，删到最后一个字符）</param>
            <returns>删除了前后缀之间的字符串包括前后缀</returns>
        </member>
        <member name="M:Cmn.Str.DelSubString(System.String,System.String,System.String,System.StringComparison)">
            <summary>
            根据前后缀删除字符串（包括前后缀，并且是匹配到前缀后最近匹配的后缀）
            </summary>
            <param name="srcString">源字符串</param>
            <param name="prefixStr">字符串前缀（如果为空的话，从第一个字符开始）</param>
            <param name="suffixStr">字符串后缀（如果为空的话，删到最后一个字符）</param>
            <param name="stringComparison">是否大小写敏感</param>
            <returns>删除了前后缀之间的字符串包括前后缀</returns>
        </member>
        <member name="T:Cmn.Caches">
            <summary>
            缓存管理
            </summary>
        </member>
        <member name="F:Cmn.Caches.DayFactor">
            <summary>
            日缓存因子
            </summary>
        </member>
        <member name="F:Cmn.Caches.HourFactor">
            <summary>
            小时缓存因子
            </summary>
        </member>
        <member name="F:Cmn.Caches.MinuteFactor">
            <summary>
            分缓存因子
            </summary>
        </member>
        <member name="F:Cmn.Caches.SecondFactor">
            <summary>
            秒缓存因子
            </summary>
        </member>
        <member name="F:Cmn.Caches.Factor">
            <summary>
            缓存因子
            </summary>
        </member>
        <member name="M:Cmn.Caches.ReSetFactor(System.Int32)">
            <summary>
            重新设置缓存因子 
            </summary>
            <param name="cacheFactor"></param>
        </member>
        <member name="M:Cmn.Caches.Clear">
            <summary>
            清空所有缓存项目
            </summary>
        </member>
        <member name="M:Cmn.Caches.RemoveByPattern(System.String)">
            <summary>
            删除缓存
            </summary>
            <param name="pattern">缓存键匹配模式</param>
        </member>
        <member name="M:Cmn.Caches.Remove(System.String)">
            <summary>
            删除缓存
            </summary>
            <param name="key">缓存键名</param>
        </member>
        <member name="M:Cmn.Caches.Insert(System.String,System.Object)">
            <summary>
            增加缓存项目 
            </summary>
            <param name="key">缓存键名</param>
            <param name="obj">缓存对象</param>
        </member>
        <member name="M:Cmn.Caches.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)">
            <summary>
            增加缓存项目(缓存时间:小时缓存因子*12)
            </summary>
            <param name="key">缓存键名</param>
            <param name="obj">缓存对象</param>
            <param name="dep">缓存依赖荐</param>
        </member>
        <member name="M:Cmn.Caches.Insert(System.String,System.Object,System.Int32)">
            <summary>
            增加缓存项目
            </summary>
            <param name="key">缓存键名</param>
            <param name="obj">缓存对象</param>
            <param name="seconds">缓存秒数</param>
        </member>
        <member name="M:Cmn.Caches.Insert(System.String,System.Object,System.Int32,System.Web.Caching.CacheItemPriority)">
            <summary>
            增加缓存项目
            </summary>
            <param name="key">缓存键名</param>
            <param name="obj">缓存对象</param>
            <param name="seconds">缓存秒数</param>
            <param name="priority">缓存优先级</param>
        </member>
        <member name="M:Cmn.Caches.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.Int32)">
            <summary>
            增加缓存项目
            </summary>
            <param name="key">缓存键名</param>
            <param name="obj">缓存对象</param>
            <param name="dep">缓存依赖项</param>
            <param name="seconds">缓存秒数</param>
        </member>
        <member name="M:Cmn.Caches.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.Int32,System.Web.Caching.CacheItemPriority)">
            <summary>
            增加缓存
            </summary>
            <param name="key">缓存键名</param>
            <param name="obj">缓存对象</param>
            <param name="dep">缓存依赖项</param>
            <param name="seconds">缓存秒数</param>
            <param name="priority">缓存优先级</param>
        </member>
        <member name="M:Cmn.Caches.MicroInsert(System.String,System.Object,System.Int32)">
            <summary>
            微小缓存
            </summary>
            <param name="key">缓存键名</param>
            <param name="obj">缓存对象</param>
            <param name="secondFactor">缓存秒因子</param>
        </member>
        <member name="M:Cmn.Caches.Max(System.String,System.Object)">
            <summary>
            增加缓存项目
            </summary>
            <param name="key"></param>
            <param name="obj"></param>
        </member>
        <member name="M:Cmn.Caches.Max(System.String,System.Object,System.Web.Caching.CacheDependency)">
            <summary>
            最大缓存对象
            </summary>
            <param name="key">缓存键名</param>
            <param name="obj">缓存对象</param>
            <param name="dep">缓存依赖项</param>
        </member>
        <member name="M:Cmn.Caches.Get(System.String)">
            <summary>
            获取缓存对象
            </summary>
            <param name="key">缓存键名</param>
            <returns>返回缓存对象</returns>
        </member>
        <member name="M:Cmn.Caches.SecondFactorCalculate(System.Int32)">
            <summary>
            根据秒缓存因子计算秒数
            </summary>
        </member>
        <member name="T:Cmn.Safe">
            <summary>
            安全操作类
            </summary>
        </member>
        <member name="M:Cmn.Safe.sqlStr(System.String)">
            <summary>
            过滤SQL字符串
            </summary>
            <param name="str">源字符串</param>
            <returns>过滤单引号后的字符串</returns>
        </member>
        <member name="M:Cmn.Safe.unHtml(System.String)">
            <summary>
            反格式化字符串
            </summary>
            <param name="htmlStr">要反格式化的字符串</param>
            <returns>反格式化完成的字符串</returns>
        </member>
        <member name="M:Cmn.Safe.showHtml(System.String)">
            <summary>
            反格式化字符串
            </summary>
            <param name="htmlStr">要反格式化的字符串</param>
            <returns>反格式化完成的字符串</returns>
        </member>
        <member name="M:Cmn.Safe.isSafeUrl(System.String)">
            <summary>
            不允许在本地提交数据
            </summary>
            <remarks>返回是否是安全URL</remarks>
            <param name="doMain">域名</param>
        </member>
        <member name="M:Cmn.Safe.getMd5(System.String)">
            <summary>
            取MD5字符串
            </summary>
            <param name="str">源字符串</param>
            <returns>MD5字符串</returns>
        </member>
        <member name="M:Cmn.Safe.GetIp">
            <summary>
            取IP
            </summary>
            <returns>返回IP</returns>
        </member>
        <member name="M:Cmn.Safe.GetOS">
            <summary>
            取操作系统
            </summary>
            <returns>返回操作系统</returns>
        </member>
        <member name="M:Cmn.Safe.GetBrowser">
            <summary>
            取游览器
            </summary>
            <returns>返回游览器</returns>
        </member>
        <member name="M:Cmn.Safe.GetUrl">
            <summary>
            取当前URL
            </summary>
            <returns>返回当前URL</returns>
        </member>
        <member name="M:Cmn.Safe.getLastUrl">
            <summary>
            返回上一页的URL
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cmn.Safe.setDateTime">
            <summary>
            设置打开页面的时间
            </summary>
        </member>
        <member name="M:Cmn.Safe.isRefresh(System.Int32)">
            <summary>
            判断是否在指定多少秒内提交数据，来达到判断是否刷新页面的目的
            </summary>
            <param name="seconds">多少秒内</param>
            <returns>是/否</returns>
        </member>
        <member name="M:Cmn.Safe.doKill(System.String)">
            <summary>
            杀死进程
            </summary>
            <param name="processName">进程名</param>
        </member>
        <member name="F:Cmn.Safe._KeyWord">
            <summary>
            过滤的关键字列表
            </summary>
        </member>
        <member name="M:Cmn.Safe.HasKeyWord(System.String)">
            <summary>
            判断是否含有非法关键字，主要过滤政治和非法关键字
            </summary>
            <param name="txt">要过滤的内容</param>
            <returns>是否含有非法关键字</returns>
        </member>
        <member name="T:Cmn.Cls.Email">
            <summary>
            发送Email类
            </summary>
        </member>
        <member name="M:Cmn.Cls.Email.#ctor">
            <summary>
            构造器
            </summary>
        </member>
        <member name="M:Cmn.Cls.Email.#ctor(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="smtpServer">SmtpServer</param>
            <param name="userName">用户名</param>
            <param name="password">密码</param>
            <param name="fromMail">发送者的Mail地址</param>
            <param name="fromName">发送者的姓名</param>
        </member>
        <member name="M:Cmn.Cls.Email.Send(System.String,System.String,System.String)">
            <summary>
            发送mail
            </summary>
            <param name="toEmail">接收者Email地址</param>
            <param name="subject">Email主题</param>
            <param name="body">Email内容</param>
            <returns></returns>
        </member>
        <member name="P:Cmn.Cls.Email.FromEmail">
            <summary>
            FromEmail
            </summary>
        </member>
        <member name="P:Cmn.Cls.Email.SmtpServer">
            <summary>
            SmtpServer
            </summary>
        </member>
        <member name="P:Cmn.Cls.Email.SmtpUserName">
            <summary>
            SmtpUserName
            </summary>
        </member>
        <member name="P:Cmn.Cls.Email.SmtpPassword">
            <summary>
            SmtpPassword
            </summary>
        </member>
        <member name="P:Cmn.Cls.Email.IsBodyHtml">
            <summary>
            Body格式
            </summary>
        </member>
        <member name="T:Cmn.Mis.AutoCreatePage">
            <summary>
            自动生成页面类
            </summary>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.GetFileSavePath(System.String)">
            <summary>
            获取要生成文件存放的路径，包括文件名(例如cmn开头的文件放在CmnAdmin目录)
            </summary>
            <param name="fileName">文件名</param>
            <returns>存放的路径</returns>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.GetTempSavePath(System.String)">
            <summary>
            获取要生成文件临时存放的路径
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.GetFileSavePath(System.String,System.Boolean)">
            <summary>
            获取要生成文件存放的路径，包括文件名(例如cmn开头的文件放在CmnAdmin目录)
            </summary>
            <param name="fileName">文件名</param>
            <param name="isRelatively">是否是相对路径</param>
            <returns>存放的路径</returns>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.CreatePage(System.String,System.String,System.Collections.ArrayList,System.String)">
            <summary>
            自动生成页面
            </summary>
            <param name="tableName">表名</param>
            <param name="templeFileName">模板名</param>
            <returns>自动生成错误信息</returns>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.SettingUsrFormField(System.String,System.String)">
            <summary>
            自动生成用户表单字段定义记录
            </summary>
            <param name="tableName">表名</param>
            <returns>自动生成错误信息</returns>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.AnalyzeAlignWidth(System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@)">
            <summary>
            分析字段属性，对齐，长度
            </summary>
            <param name="identity"></param>
            <param name="type"></param>
            <param name="length"></param>
            <param name="ffieldname"></param>
            <param name="colAlign"></param>
            <param name="colWidh"></param>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.CheckTableDefine(System.String)">
            <summary>
            检查表定义
            </summary>
            <param name="tableName">表名</param>
            <returns>表定义错误信息</returns>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.GetArrCanIgnoreFields">
            <summary>
            取得忽略字段
            </summary>
            <returns>忽略字段</returns>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.IsCanIgnoreFields(System.String)">
            <summary>
            判断是否是可忽略字段
            </summary>
            <param name="fieldName"></param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.CheckTableDefine(System.Data.DataTable)">
            <summary>
            检查表以及各个字段注释是否完整
            </summary>
            <param name="dt">表实例</param>
            <returns>不完整信息</returns>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.CreateControl(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.String@,System.String@,System.String@,System.String@)">
            <summary>
            创建控件源代码
            </summary>
            <param name="tablename">表名</param>
            <param name="fieldname">字段名</param>
            <param name="fielddesc">字段注释</param>
            <param name="type">字段类型</param>
            <param name="length">长度</param>
            <param name="identity">是否自增长</param>
            <param name="pkey">是否主键</param>
            <param name="ftablename">外键表名</param>
            <param name="ffieldname">外键字段名</param>
            <param name="fffieldname">外键自引用字段名</param>
            <param name="nullable">是否可以为空</param>
            <param name="defaultvalue">默认值</param>
            <param name="isAscx">是否是明细控件</param>
            <param name="checksource">输入框检查源代码</param>
            <param name="afteraddclicksource">AfterAddClick事件源代码</param>
            <param name="beforeaddclicksource">BeforeAddClick事件源代码</param>
            <param name="beforemodclicksource">BeforeModifyClick事件源代码</param>
            <returns>控件源代码</returns>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.GetBitValue(System.String,System.String)">
            <summary>
            Bit字段值变换
            </summary>
            <param name="type">字段类型</param>
            <param name="value">值</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.CreateAceFieldList(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            创建AceFieldList源代码
            </summary>
            <param name="tablename"></param>
            <param name="fieldname"></param>
            <param name="ftablename"></param>
            <param name="ffieldname"></param>
            <param name="fffieldname"></param>
            <param name="nullable"></param>
            <returns>返回AceFieldList源代码</returns>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.CreateAddCol(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            创建AddCol源代码
            </summary>
            <param name="tablename"></param>
            <param name="fieldname"></param>
            <param name="fielddesc"></param>
            <param name="type"></param>
            <param name="length"></param>
            <param name="identity"></param>
            <param name="pkey"></param>
            <param name="ftablename"></param>
            <param name="ffieldname"></param>
            <param name="isAscx"></param>
            <returns>返回AddCol源代码</returns>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.AnalyzeDdlDefine(System.String,System.String@,System.Collections.ArrayList@)">
            <summary>
            分析DropDownList的字段的注释，返回字段注释（除了选项值）和返回（选项值List）
            </summary>
            <param name="ddlDesc">DropDownList字段注释（数据库原值）</param>
            <param name="fieldDesc">字段注释（除了选项值）</param>
            <param name="ht">选项值List</param>
            <returns>是否符合DropDownList的字段的注释</returns>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.AnalyzeDdlDefine(System.String)">
            <summary>
            分析DropDownList的字段的注释
            </summary>
            <param name="ddlDesc"></param>
            <returns>是否符合DropDownList的字段的注释</returns>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.getDdlFieldDesc(System.String)">
            <summary>
            取得DropDownList的字段的注释（除了选项值）
            </summary>
            <param name="ddlDesc"></param>
            <returns>DropDownList的字段的注释（除了选项值）</returns>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.AnalyzeTxtDefine(System.String,System.String@)">
            <summary>
            分析输入框的字段的注释
            </summary>
            <param name="fieldName"></param>
            <param name="commend"></param>
            <returns>返回输入框的字段的注释</returns>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.GetTxtDefine(System.String)">
            <summary>
            取得输入框的字段的注释（除了备注说明）
            </summary>
            <param name="fieldName"></param>
            <returns>输入框的字段的注释（除了备注说明）</returns>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.Space(System.Int32)">
            <summary>
            取得指定长度的空格字符创
            </summary>
            <param name="length"></param>
            <returns>返回指定长度的空格字符创</returns>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.GetDefaultValue(System.String)">
            <summary>
            取得默认值
            </summary>
            <param name="defaultvalue">默认值（数据库原值）</param>
            <returns>返回默认值</returns>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.GetForeignKeyFieldDesc(System.String)">
            <summary>
            取得外键表的描述字段（比如：bas_Client的ClientDesc）
            </summary>
            <param name="ftableName"></param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.GetForeignKeyFieldDesc(System.String,System.String@)">
            <summary>
            取得外键表的描述字段（比如：bas_Client的ClientDesc）
            </summary>
            <param name="ftableName">外键表名</param>
            <param name="pyfieldname">拼音字段</param>
            <returns>描述字段</returns>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.GetDetailTableShowField(System.String,System.String,System.Collections.ArrayList@,System.String@,System.String@)">
            <summary>
            要显示于主页面的明细表字段（比如：pcs_GoodsInDtl的GoodsID，WarehouseID~Memo，cmn字段除外。）
            </summary>
            <param name="ftableName">外键表名</param>
            <param name="ftableName">别名</param>
            <returns>要显示于主页面的明细表字段</returns>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.InsertUserForm(System.String,System.String,System.String)">
            <summary>
            向cmn_usr_UserForm增加记录
            </summary>
            <param name="tableName">表名</param>
            <param name="pagedesc">页面名称</param>
            <param name="parentTableName">父表名，单表或主表的主表名为空</param>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.InsertUserFormCol(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            向cmn_usr_UserFormCol增加记录
            </summary>
            <param name="userFormID"></param>
            <param name="colName"></param>
            <param name="colTitle"></param>
            <param name="colAlign"></param>
            <param name="colWidth"></param>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.DelelteUserFormCol(System.String)">
            <summary>
            删除指定页面的cmn_usr_UserFormCol记录
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.DelelteUserForm(System.String)">
            <summary>
            删除指定页面的cmn_usr_UserForm记录
            </summary>
            <param name="tableName"></param>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.BackUp(System.String)">
            <summary>
            既存文件备份（备份到AucPageBackUp）
            </summary>
            <param name="filename">备份文件名</param>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.IsPicField(System.String)">
            <summary>
            判断是否是图片字段
            </summary>
            <param name="comment"></param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.AutoCreatePage.IsPicField(System.String,System.String@,System.String@)">
            <summary>
            判断是否是图片字段
            </summary>
            <param name="comment"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:Cmn.MathFunc.ToDouble(System.String)">
            <summary>
            string类型转换为float类型
            </summary>
            <param name="str">要转换的字符串</param>
            <returns>转换后的double型值</returns>
        </member>
        <member name="M:Cmn.MathFunc.IsEqual(System.Double,System.Double)">
            <summary>
            比较两个Double是否相等
            </summary>
            <param name="d1">浮点数1</param>
            <param name="d2">浮点数2</param>
            <returns>是否相等</returns>
        </member>
        <member name="M:Cmn.MathFunc.IsGreat(System.Double,System.Double)">
            <summary>
            比较浮点数1是否大于浮点数2
            </summary>
            <param name="d1">浮点数1</param>
            <param name="d2">浮点数2</param>
            <returns>是否大于</returns>
        </member>
        <member name="M:Cmn.MathFunc.IsGreatEqual(System.Double,System.Double)">
            <summary>
            比较浮点数1是否大于等于浮点数2
            </summary>
            <param name="d1">浮点数1</param>
            <param name="d2">浮点数2</param>
            <returns>是否大于等于</returns>
        </member>
        <member name="M:Cmn.MathFunc.IsLess(System.Double,System.Double)">
            <summary>
            比较浮点数1是否小于浮点数2
            </summary>
            <param name="d1">浮点数1</param>
            <param name="d2">浮点数2</param>
            <returns>是否小于</returns>
        </member>
        <member name="M:Cmn.MathFunc.IsLessEqual(System.Double,System.Double)">
            <summary>
            比较浮点数1是否小于等于浮点数2
            </summary>
            <param name="d1">浮点数1</param>
            <param name="d2">浮点数2</param>
            <returns>是否小于等于</returns>
        </member>
        <member name="T:Cmn.Mis.UI">
            <summary>
            UI可视化界面的操作
            </summary>
        </member>
        <member name="M:Cmn.Mis.UI.IsControlContainer(System.Web.UI.Control)">
            <summary>
            是否是控件容器
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.UI.GetValue(System.Web.UI.Control)">
            <summary>
            取一个控件的值
            </summary>
            <param name="control">控件</param>
            <returns>值</returns>
        </member>
        <member name="M:Cmn.Mis.UI.SetValue(System.Web.UI.Control,System.String)">
            <summary>
            设置一个控件的值
            </summary>
            <param name="control">控件</param>
            <param name="value">值</param>
        </member>
        <member name="M:Cmn.Mis.UI.InitControl(System.Web.UI.Control)">
            <summary>
            初始化控件
            </summary>
            <param name="control">控件</param>
        </member>
        <member name="M:Cmn.Mis.UI.SetEnabled(System.Web.UI.Control,System.Boolean)">
            <summary>
            设置一个控件是否可用
            </summary>
            <param name="control">控件</param>
            <param name="value">值</param>
        </member>
        <member name="M:Cmn.Mis.UI.SetAllEnabled(System.Web.UI.Control,System.Boolean)">
            <summary>
            设置所有控件包括子控件是否可用
            </summary>
            <param name="control">控件</param>
            <param name="value">值</param>
        </member>
        <member name="M:Cmn.Mis.UI.SetVisible(System.Web.UI.Control,System.Boolean)">
            <summary>
            设置一个控件是否可见
            </summary>
            <param name="control">控件</param>
            <param name="value">值</param>
        </member>
        <member name="M:Cmn.Mis.UI.GetValueList(System.Collections.Generic.Dictionary{System.String,System.String},System.Web.UI.Control)">
            <summary>
            遍历所有控件 并返回字段名和值
            </summary>
            <param name="valueList">字段名和值列表</param>
            <param name="control">控件</param>
        </member>
        <member name="M:Cmn.Mis.UI.SetControlValue(System.Collections.Generic.Dictionary{System.String,System.String},System.Web.UI.Control)">
            <summary>
            遍历所有控件并设置控件的值
            </summary>
            <param name="valueList">值列表</param>
            <param name="control">控件</param>
        </member>
        <member name="M:Cmn.Mis.UI.InitControls(System.Web.UI.Control)">
            <summary>
            初始化控件容器中的所有控件
            </summary>
            <param name="control">控件容器</param>
        </member>
        <member name="M:Cmn.Mis.UI.SetEditFieldName(System.Web.UI.Control,System.String,System.String)">
            <summary>
            设置编辑界面的字段名称
            </summary>
            <param name="control">控件容器</param>
            <param name="userFormID">用户界面代码</param>
            <param name="tableName">表名</param>
        </member>
        <member name="M:Cmn.Mis.UI.FindHtmlForm(System.Web.UI.ControlCollection)">
            <summary>
            获取HtmlForm
            </summary>
            <param name="controlCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.UI.FindHtmlForm(System.Web.UI.Control)">
            <summary>
            获取HtmlForm
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.UI.GetBR(System.Int32)">
             <summary>
             取换行Label
             </summary>
             <returns></returns>
            <param name="brCount">空行的行数</param>
        </member>
        <member name="M:Cmn.Mis.UI.GetBlankHeight(System.Int32)">
            <summary>
            获取一定高度的空行
            </summary>
            <param name="height">空行的高度</param>
            <returns>一定高度的空行</returns>
        </member>
        <member name="M:Cmn.Mis.UI.GetBlank(System.Int32)">
            <summary>
            取空格Label
            </summary>
            <param name="blankCount">空格数</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.UI.SetControlJs(System.String,System.Web.UI.Control)">
            <summary>
            遍历各个可输入框，设置其JavaScript
            </summary>
            <param name="tableName">表名</param>
            <param name="control">控件</param>
            <returns>成功加载js的控件数量，如果一个都没有为0</returns>
        </member>
        <member name="M:Cmn.Mis.UI.FieldDropDownList(System.Web.UI.WebControls.DropDownList,System.String,System.String,System.String)">
            <summary>
            填充下拉框列表
            </summary>
            <param name="dropDownList">下拉框名称</param>
            <param name="strSql">取数据的sql语句</param>
            <param name="valueField">值字段名</param>
            <param name="textField">在下拉框中显示的字段名</param>
        </member>
        <member name="M:Cmn.Mis.UI.FieldDropDownList(System.Web.UI.WebControls.DropDownList,System.String,System.String,System.String,System.String)">
            <summary>
            填充下拉框列表
            </summary>
            <param name="dropDownList">下拉框名称</param>
            <param name="connectStr">连接字符串</param>
            <param name="strSql">取数据的sql语句</param>
            <param name="valueField">值字段名</param>
            <param name="textField">在下拉框中显示的字段名</param>
        </member>
        <member name="M:Cmn.Mis.UI.FieldDropDownList(System.Web.UI.WebControls.DropDownList,System.String,System.String,System.String,System.Boolean)">
            <summary>
            填充下拉框列表
            </summary>
            <param name="dropDownList">下拉框名称</param>
            <param name="strSql">取数据的sql语句</param>
            <param name="valueField">值字段名</param>
            <param name="textField">在下拉框中显示的字段名</param>
            <param name="IsAllowEmpty">是否允许空选项</param>
        </member>
        <!-- 对于成员“M:Cmn.Mis.UI.FieldDropDownList(System.Web.UI.WebControls.DropDownList,System.String,System.String,System.String,System.String,System.Boolean)”忽略有格式错误的 XML 注释 -->
        <member name="M:Cmn.Mis.UI.FieldDropDownList(System.Web.UI.WebControls.DropDownList,System.String)">
            <summary>
            填充下拉框
            </summary>
            <param name="dropDownList">下拉框</param>
            <param name="strSql">sql语句</param>
        </member>
        <member name="M:Cmn.Mis.UI.FieldDropDownList(System.Web.UI.WebControls.DropDownList,System.String,System.Boolean)">
            <summary>
            填充下拉框
            </summary>
            <param name="dropDownList">下拉框</param>
            <param name="strSql">sql语句</param>
            <param name="isAllowEmpty">是否允许空</param>
        </member>
        <member name="M:Cmn.Mis.UI.FieldDropDownList(System.Web.UI.WebControls.DropDownList,System.String,System.String,System.Boolean)">
            <summary>
            填充下拉框
            </summary>
            <param name="dropDownList">下拉框</param>
            <param name="connectStr">链接字符串</param>
            <param name="strSql">sql语句</param>
            <param name="isAllowEmpty">是否允许空</param>
        </member>
        <member name="M:Cmn.Mis.UI.FieldCheckBoxList(System.Web.UI.WebControls.CheckBoxList,System.String,System.String,System.String)">
            <summary>
            填充多选框
            </summary>
            <param name="checkBoxList">CheckBoxList</param>
            <param name="strSql">sql语句</param>
            <param name="valueField">值字段名</param>
            <param name="textField">在多选框中显示的字段名</param>
        </member>
        <member name="M:Cmn.Mis.UI.GetDetailControl(System.Collections.Generic.List{Cmn.Mis.BasDetailControl},System.Web.UI.Control)">
            <summary>
            取得所有的明细表记录显示控件
            </summary>
            <param name="detailControls">明细表记录显示控件列表</param>
            <param name="control">控件或控件容器，比如Panel、PlaceHolder等</param>
        </member>
        <member name="M:Cmn.Mis.UI.GetDescList(System.Collections.Generic.Dictionary{System.String,System.String},System.Web.UI.Control)">
            <summary>
            遍历所有控件 并返回说明字段名和值（比如DropDownList的DataTextField），目前主要用在明细界面
            </summary>
            <param name="valueList">说明字段名和值列表</param>
            <param name="control">控件</param>
        </member>
        <member name="M:Cmn.Mis.UI.FindControl(System.Web.UI.Control,System.String)">
            <summary>
            根据ID找控件
            </summary>
            <param name="control">被找的控件容器或控件</param>
            <param name="controlID">控件ID</param>
            <returns>根据ID找到的控件，如果没有找到返回null</returns>
        </member>
        <member name="M:Cmn.Mis.UI.FocusFirstControl(System.Web.UI.Control)">
            <summary>
            让控件容器中的第一个能够获取焦点的控件获得焦点
            </summary>
            <param name="control">控件容器</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Cmn.Mis.UI.SetReadonlyToEnabledFalse(System.Web.UI.Control)">
            <summary>
            把所有ReadOnly控件包括子控件设置成Enabled到false
            </summary>
            <param name="control">控件</param>        
        </member>
        <member name="T:Cmn.DB">
            <summary>
            数据库操作类
            </summary>
        </member>
        <member name="F:Cmn.DB.errorMessage">
            <summary>
            返回数据库操作出错信息
            </summary>
        </member>
        <member name="M:Cmn.DB.SqlMakeInParam(System.String,System.Object)">
            <summary>
            组成一个SqlParameter参数
            </summary>
            <param name="ParamName">参数名</param>
            <param name="Value">参数值</param>
            <returns>返回一个SqlParameter参数</returns>
        </member>
        <member name="M:Cmn.DB.MakeInParam(System.String,System.Data.SqlDbType,System.Int32,System.Object)">
            <summary>
            组成一个SqlParameter参数
            </summary>
            <param name="ParamName">参数名</param>
            <param name="DbType">参数类型</param>
            <param name="Size">参数类型大小</param>
            <param name="Value">参数值</param>
            <returns>返回一个SqlParameter参数</returns>
        </member>
        <member name="M:Cmn.DB.MakeInParam(System.String,System.Data.SqlDbType,System.Object)">
            <summary>
            组成一个SqlParameter参数
            </summary>
            <param name="ParamName">参数名</param>
            <param name="DbType">参数类型</param>
            <param name="Value">参数值</param>
            <returns>返回一个SqlParameter参数</returns>
        </member>
        <member name="M:Cmn.DB.MakeOutParam(System.String,System.Data.SqlDbType,System.Int32)">
            <summary>
            输出一个SqlParameter参数
            </summary>
            <param name="ParamName">参数名</param>
            <param name="DbType">参数类型</param>
            <param name="Size">参数类型大小</param>
            <returns>返回一个SqlParameter参数</returns>
        </member>
        <member name="M:Cmn.DB.MakeParam(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Object)">
            <summary>
            构造一个SqlParameter参数值
            </summary>
            <param name="ParamName">参数名</param>
            <param name="DbType">参数类型</param>
            <param name="Size">参数类型大小</param>
            <param name="Direction">输入/输出</param>
            <param name="Value">参数值</param>
            <returns>返回一个SqlParameter参数</returns>
        </member>
        <member name="M:Cmn.DB.execSql(System.String)">
            <summary>
            运行SQL角本
            </summary>
            <param name="strSql">SQL角本串</param>
            <returns>返回操作是否成功</returns>
        </member>
        <member name="M:Cmn.DB.execSql(System.String,System.String)">
            <summary>
            运行SQL角本
            </summary>
            <param name="connStr">连接字符串</param>
            <param name="strSql">SQL角本串</param>
            <returns>返回操作是否成功</returns>
        </member>
        <member name="M:Cmn.DB.execSql(System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            执行SQL
            </summary>
            <param name="sqlConn">数据库连接</param>
            <param name="strSql">SQL角本串</param>
            <returns>返回操作是否成功</returns>
        </member>
        <member name="M:Cmn.DB.execSql(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            运行SQL角本
            </summary>
            <param name="strSql">SQL角本串</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回操作是否成功</returns>
        </member>
        <member name="M:Cmn.DB.execSql(System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            运行SQL角本
            </summary>
            <param name="commandType">CommandType</param>
            <param name="strSql">SQL角本串</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回操作是否成功</returns>
        </member>
        <member name="M:Cmn.DB.execSql(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            运行SQL角本
            </summary>
            <param name="connStr">connStr</param>
            <param name="commandType">CommandType</param>
            <param name="strSql">SQL角本串</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回操作是否成功</returns>
        </member>
        <member name="M:Cmn.DB.execSqlTransaction(System.String)">
            <summary>
            执行一个事务 只支持SQL数据库
            </summary>
            <param name="strSql">SQL列表每条SQL用“;”分开</param>
            <returns>返回操作是否成功</returns>
        </member>
        <member name="M:Cmn.DB.getDataSet(System.String)">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="strSql">SQL查询角本串</param>
            <returns>返回记录集存入DataSet</returns>
        </member>
        <member name="M:Cmn.DB.getDataSet(System.String,System.String)">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="connStr">连接字符串</param>
            <param name="strSql">SQL查询角本串</param>
            <returns>返回记录集存入DataSet</returns>
        </member>
        <member name="M:Cmn.DB.getDataSet(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="strSql">strSql</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回记录集存入DataSet</returns>
        </member>
        <member name="M:Cmn.DB.getDataSet(System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="commandType">CommandType</param>
            <param name="strSql">strSql</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回记录集存入DataSet</returns>
        </member>
        <member name="M:Cmn.DB.getDataSet(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="connStr">connStr</param>
            <param name="commandType">CommandType</param>
            <param name="strSql">strSql</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回记录集存入DataSet</returns>
        </member>
        <member name="M:Cmn.DB.getSqlDataAdapter(System.String)">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="strSql">SQL查询角本串</param>
            <returns>返回记录集存入DataSet</returns>
        </member>
        <member name="M:Cmn.DB.getSqlDataAdapter(System.String,System.String)">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="connStr">连接字符串</param>
            <param name="strSql">SQL查询角本串</param>
            <returns>返回记录集存入DataSet</returns>
        </member>
        <member name="M:Cmn.DB.getSqlDataAdapter(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="strSql">strSql</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回记录集存入DataSet</returns>
        </member>
        <member name="M:Cmn.DB.getSqlDataAdapter(System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="commandType">CommandType</param>
            <param name="strSql">strSql</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回记录集存入DataSet</returns>
        </member>
        <member name="M:Cmn.DB.getSqlDataAdapter(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="connStr">connStr</param>
            <param name="commandType">CommandType</param>
            <param name="strSql">strSql</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回记录集存入DataSet</returns>
        </member>
        <member name="M:Cmn.DB.getDataTable(System.String)">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="strSql">SQL查询角本串</param>
            <returns>返回记录集存入DataTable</returns>
        </member>
        <member name="M:Cmn.DB.getDataTable(System.String,System.String)">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="connStr">连接字符串</param>
            <param name="strSql">SQL查询角本串</param>
            <returns>返回记录集存入DataTable</returns>
        </member>
        <member name="M:Cmn.DB.getDataTable(System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="sqlConn">数据库连接</param>
            <param name="strSql">SQL查询角本串</param>
            <returns>返回记录集存入DataTable</returns>
        </member>
        <member name="M:Cmn.DB.getDataTable(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="strSql">strSql</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回记录集存入DataTable</returns>
        </member>
        <member name="M:Cmn.DB.getDataTable(System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="commandType">CommandType</param>
            <param name="strSql">strSql</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回记录集存入DataTable</returns>
        </member>
        <member name="M:Cmn.DB.getDataTable(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="connStr">connStr</param>
            <param name="commandType">CommandType</param>
            <param name="strSql">strSql</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回记录集存入DataTable</returns>
        </member>
        <member name="M:Cmn.DB.getSqlDataReader(System.String)">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="strSql">SQL查询角本串</param>
            <returns>返回记录集存入DataReader</returns>
        </member>
        <member name="M:Cmn.DB.getSqlDataReader(System.String,System.String)">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
             <param name="connStr">连接字符串</param>
            <param name="strSql">SQL查询角本串</param>
            <returns>返回记录集存入DataReader</returns>
        </member>
        <member name="M:Cmn.DB.getSqlDataReader(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="strSql">strSql</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回记录集存入DataReader</returns>
        </member>
        <member name="M:Cmn.DB.getSqlDataReader(System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="commandType">CommandType</param>
            <param name="strSql">strSql</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回记录集存入DataReader</returns>
        </member>
        <member name="M:Cmn.DB.getSqlDataReader(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回运行SQL查询串的记录集
            </summary>
            <param name="connStr">connStr</param>
            <param name="commandType">CommandType</param>
            <param name="strSql">strSql</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回记录集存入DataReader</returns>
        </member>
        <member name="M:Cmn.DB.getFieldValue(System.String)">
            <summary>
            条件返回指定字段的值
            </summary>
            <param name="strSql">SQL查询角本串</param>
            <returns>返回字段的值</returns>
        </member>
        <member name="M:Cmn.DB.getFieldValue(System.String,System.String)">
            <summary>
            条件返回指定字段的值
            </summary>
            <param name="connStr">连接字符串</param>
            <param name="strSql">SQL查询角本串</param>
            <returns>返回字段的值</returns>
        </member>
        <member name="M:Cmn.DB.getFieldValue(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            条件返回指定字段的值
            </summary>
            <param name="strSql">strSql</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回字段的值</returns>
        </member>
        <member name="M:Cmn.DB.getFieldValue(System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            条件返回指定字段的值
            </summary>
            <param name="commandType">CommandType</param>
            <param name="strSql">strSql</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回字段的值</returns>
        </member>
        <member name="M:Cmn.DB.getFieldValue(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            条件返回指定字段的值
            </summary>
            <param name="connStr">connStr</param>
            <param name="commandType">CommandType</param>
            <param name="strSql">strSql</param>
            <param name="commandParameters">SqlParameter[]</param>
            <returns>返回字段的值</returns>
        </member>
        <member name="M:Cmn.DB.getFieldValue(System.Data.DataTable,System.Int32,System.String)">
            <summary>
            从DataTable的某一行中取得某个字段
            </summary>
            <param name="dt">DataTable</param>
            <param name="rowNo">行号</param>
            <param name="fieldName">字段名</param>
            <returns>字段内容</returns>
        </member>
        <member name="M:Cmn.DB.getFieldValue(System.Data.DataTable,System.Int32,System.Int32)">
            <summary>
            从DataTable的某一行中取得某个字段
            </summary>
            <param name="dt">DataTable</param>
            <param name="rowNo">行号</param>
            <param name="colNo">列号</param>
            <returns>字段内容</returns>
        </member>
        <member name="M:Cmn.DB.GetConnection">
            <summary>
            获取数据库连接（用好必须要Close）
            </summary>
            <returns>数据库连接</returns>
        </member>
        <member name="M:Cmn.DB.GetConnection(System.String)">
            <summary>
            获取数据库连接（用好必须要Close）
            </summary>
            <param name="connStr">链接字符串</param>
            <returns>数据库连接</returns>
        </member>
        <member name="M:Cmn.DB.getTableAllField(System.String)">
            <summary>
            取一个表中的所有字段名
            </summary>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Cmn.DB.getTableKey(System.String)">
            <summary>
            取一个表中的第一个字段为主键
            </summary>
            <param name="tableName">表名</param>
            <returns>第一个字段（主键）</returns>
        </member>
        <member name="M:Cmn.DB.GetSqlServerVersion">
            <summary>
            取得SQLserver版本
            </summary>
            <returns>8：Sql2000 9：Sql2005</returns>
        </member>
        <member name="M:Cmn.DB.GetSqlServerVersion(System.String)">
            <summary>
            取得SQLserver版本
            </summary>
            <returns>8：Sql2000 9：Sql2005</returns>
        </member>
        <member name="M:Cmn.DB.GetTableFieldPropSql(System.String)">
            <summary>
            取得表字段属性SQL文(包括OrderBy)
            </summary>
            <param name="tableName">表名</param>
            <returns>表字段属性SQL文</returns>
        </member>
        <member name="M:Cmn.DB.GetTableFieldPropSql(System.String,System.String)">
            <summary>
            取得表字段属性SQL文(包括OrderBy)
            </summary>
            <param name="tableName">表名</param>
            <returns>表字段属性SQL文</returns>
        </member>
        <member name="M:Cmn.DB.GetTableFieldPropSqlWithOutOrderBy(System.String)">
            <summary>
            取得表字段属性SQL文(不包括OrderBy)
            </summary>
            <param name="tableName">表名</param>
            <returns>表字段属性SQL文</returns>
        </member>
        <member name="M:Cmn.DB.GetTableFieldPropSqlWithOutOrderBy(System.String,System.String)">
            <summary>
            取得表字段属性SQL文(不包括OrderBy)
            </summary>
            <param name="tableName">表名</param>
            <returns>表字段属性SQL文</returns>
        </member>
        <member name="M:Cmn.DB.doWriteLog(System.String,System.String)">
            <summary>
            写数据库操作日志
            </summary>
            <param name="_strSql">出错SQL</param>
            <param name="_Msg">出错消息</param>
        </member>
        <member name="T:Cmn.Cls.iniFile">
            <summary>
            INI文件操作
            </summary>
        </member>
        <member name="F:Cmn.Cls.iniFile.path">
            <summary>
            目录
            </summary>
        </member>
        <member name="M:Cmn.Cls.iniFile.#ctor(System.String)">
            <summary>
            构造
            </summary>
            <param name="iniPath">文件名</param>
        </member>
        <member name="M:Cmn.Cls.iniFile.WriteValue(System.String,System.String,System.String)">
            <summary>
            向INI文件写数据
            </summary>
            <param name="section">结点</param>
            <param name="key">名称</param>
            <param name="value">值</param>
        </member>
        <member name="M:Cmn.Cls.iniFile.ReadValue(System.String,System.String)">
            <summary>
            向INI文件读数据
            </summary>
            <param name="section">结点</param>
            <param name="key">名称</param>
            <returns>数据</returns>
        </member>
        <member name="T:Cmn.Cls.Upload">
            <summary>
            上传文件类
            </summary>
        </member>
        <member name="M:Cmn.Cls.Upload.#ctor">
            <summary>
            构造器
            </summary>
        </member>
        <member name="M:Cmn.Cls.Upload.doUpLoad(System.Web.UI.WebControls.FileUpload)">
            <summary>
            上传文件
            </summary>
            <param name="_fileUpload">fileUpload组件</param>
        </member>
        <member name="P:Cmn.Cls.Upload.AllowedExtensions">
            <summary>
            允许上传的扩展名
            </summary>
        </member>
        <member name="P:Cmn.Cls.Upload.FilePath">
            <summary>
            文件保存到哪
            </summary>
        </member>
        <member name="P:Cmn.Cls.Upload.MaxFileSize">
            <summary>
            最大可上传文件大小
            </summary>
        </member>
        <member name="P:Cmn.Cls.Upload.RandNumbers">
            <summary>
            随机数
            </summary>
        </member>
        <member name="P:Cmn.Cls.Upload.isCreateFolderForNotExits">
            <summary>
            是否自动新建不存在的文件目录
            </summary>
        </member>
        <member name="P:Cmn.Cls.Upload.RndFileType">
            <summary>
            文件随机类型
            </summary>
        </member>
        <member name="P:Cmn.Cls.Upload.FileSize">
            <summary>
            返回文件大小
            </summary>
        </member>
        <member name="P:Cmn.Cls.Upload.FileName">
            <summary>
            返回文件名
            </summary>
        </member>
        <member name="P:Cmn.Cls.Upload.State">
            <summary>
            返回操作状态
            </summary>
        </member>
        <member name="T:Cmn.Cls.Upload.RandFileType">
            <summary>
            随机类型
            </summary>
        </member>
        <member name="F:Cmn.Cls.Upload.RandFileType.None">
            <summary>
            不随机
            </summary>
        </member>
        <member name="F:Cmn.Cls.Upload.RandFileType.FileName_DateTime">
            <summary>
            按日期随机
            </summary>
        </member>
        <member name="F:Cmn.Cls.Upload.RandFileType.FileName_RandNumber">
            <summary>
            按数字随机
            </summary>
        </member>
        <member name="M:Cmn.Mis.SendMessage.Send(Cmn.Mis.TablePage,System.String,Cmn.Mis.MessageType)">
            <summary>
            发送消息
            </summary>
            <param name="page">页面对象</param>
            <param name="mainTableName">主表表名</param>
            <param name="recID">记录代码</param>
            <param name="msgType">消息类型</param>
        </member>
        <member name="M:Cmn.Mis.SendMessage.SaveRec(Cmn.Mis.TablePage,System.String)">
            <summary>
            保存记录，主要用于更新和删除的时候提示
            </summary>
            <param name="page">页面对象</param>
            <param name="mainTableName">主表表名</param>
            <param name="recID">记录代码</param>
        </member>
        <member name="M:Cmn.Mis.SendMessage.Send(System.String,System.String,System.String)">
            <summary>
            发送信息
            </summary>
            <param name="userID">发送给的用户代码</param>
            <param name="title">信息标题</param>
            <param name="content">信息内容</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Cmn.Mis.SendMessage.Send(System.String,System.String,System.String,Cmn.Mis.MessageImportance)">
            <summary>
            发送消息
            </summary>
            <param name="userID">发送给的用户代码</param>
            <param name="title">信息标题</param>
            <param name="content">信息内容</param>
            <param name="msgImportance">信息重要程度</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Cmn.Mis.SendMessage.Send(System.String,System.String,System.String,Cmn.Mis.MessageImportance,System.String,System.String)">
            <summary>
            发送消息
            </summary>
            <param name="userID">发送给的用户代码</param>
            <param name="title">信息标题</param>
            <param name="content">信息内容</param>
            <param name="msgImportance">信息重要程度</param>
            <param name="UserFormID">用户界面代码</param>
            <param name="recID">记录代码</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Cmn.Mis.SendMessage.Send(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            发送信息
            </summary>
            <param name="userID">发送给的用户代码</param>
            <param name="title">信息标题</param>
            <param name="content">信息内容</param>
            <param name="needSendMail">是否需要发送Mail</param>
            <param name="needSendNote">是否需要发送短信</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Cmn.Mis.SendMessage.Send(System.String,System.String,System.String,System.Boolean,System.Boolean,Cmn.Mis.MessageImportance)">
            <summary>
            发送消息
            </summary>
            <param name="userID">用户代码</param>
            <param name="title">标题</param>
            <param name="content">内容</param>
            <param name="needSendMail">是否需要发送Mail</param>
            <param name="needSendNote">是否需要发送短信</param>
            <param name="msgImportance">消息重要程度</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Cmn.Mis.SendMessage.Send(System.String,System.String,System.String,System.Boolean,System.Boolean,Cmn.Mis.MessageImportance,System.String,System.String)">
            <summary>
            发送消息
            </summary>
            <param name="userID">用户代码</param>
            <param name="title">标题</param>
            <param name="content">内容</param>
            <param name="needSendMail">是否需要发送Mail</param>
            <param name="needSendNote">是否需要发送短信</param>
            <param name="msgImportance">消息重要程度</param>
            <param name="UserFormID">用户表单代码</param>
            <param name="recID">记录代码</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Cmn.Mis.SendMessage.AddMessage(System.String,System.String)">
            <summary>
            增加一个新的消息
            </summary>
            <param name="title">消息标题</param>
            <param name="content">消息内容</param>
            <returns>消息代码</returns>
        </member>
        <member name="M:Cmn.Mis.SendMessage.AddMessage(System.String,System.String,Cmn.Mis.MessageImportance)">
            <summary>
            增加一个新的消息
            </summary>
            <param name="title">消息标题</param>
            <param name="content">消息内容</param>
            <param name="importance">重要程度</param>
            <returns>消息代码</returns>
        </member>
        <member name="M:Cmn.Mis.SendMessage.AddMessage(System.String,System.String,Cmn.Mis.MessageType,Cmn.Mis.MessageImportance)">
            <summary>
            增加一个新的消息
            </summary>
            <param name="title">消息标题</param>
            <param name="content">消息内容</param>
            <param name="msgType">信息类型</param>
            <param name="importance">重要程度</param>
            <returns>消息代码</returns>
        </member>
        <member name="M:Cmn.Mis.SendMessage.AddMessage(System.String,System.String,Cmn.Mis.MessageType,Cmn.Mis.MessageImportance,System.String,System.String)">
            <summary>
            增加一个新的消息
            </summary>
            <param name="title">消息标题</param>
            <param name="content">消息内容</param>
            <param name="msgType">消息类型</param>
            <param name="importance">重要程度</param>
            <param name="UserFormID">用户界面代码</param>
            <param name="recID">记录主键代码</param>
            <returns>新增的消息代码</returns>
        </member>
        <member name="M:Cmn.Mis.SendMessage.Send(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            发送消息
            </summary>
            <param name="userID">用户代码</param>
            <param name="msgID">消息代码</param>
            <param name="needSendMail">是否需要发送Mail</param>
            <param name="needSendNote">是否需要发送短信</param>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:Cmn.Mis.SendMessage.Send(System.String,System.String)">
            <summary>
            发送消息
            </summary>
            <param name="userID">用户代码</param>
            <param name="msgID">消息代码</param>
            <returns>发送是否成功</returns>
        </member>
        <member name="M:Cmn.Mis.SendMessage.SetMsgHasView(System.String)">
            <summary>
            设置信息已读（所有收到这个信息的人都设置成已读）
            </summary>
            <param name="msgID">消息代码</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Cmn.Mis.SendMessage.SetMsgHasView(System.String,System.Boolean)">
            <summary>
            设置信息已读（所有收到这个信息的人都设置成已读）
            </summary>
            <param name="msgID">消息代码</param>
            <param name="onlyCurUserMsg">是否只把当前用户的对应消息设置成已读</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Cmn.Mis.SendMessage.SetMsgHasView(System.String,System.String)">
            <summary>
            设置消息已读
            </summary>
            <param name="userFormID">用户界面代码</param>
            <param name="recID">记录代码</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Cmn.Mis.SendMessage.SetMsgHasView(System.String,System.String,System.Boolean)">
            <summary>
            设置消息已读
            </summary>
            <param name="userFormID">用户界面代码</param>
            <param name="recID">记录代码</param>
            <param name="onlyCurUserMsg">是否只把当前用户的对应消息设置成已读</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Cmn.Mis.SendMessage.GetRec(Cmn.Mis.TablePage,System.String)">
            <summary>
            从表中获取一条记录
            </summary>
            <param name="tableName">表名</param>
            <param name="recID">记录代码</param>
            <returns>字段和值的列表</returns>
        </member>
        <member name="M:Cmn.Mis.SendMessage.SendToUsers(System.String)">
            <summary>
            根据MsgID发送给所有相关用户
            </summary>
            <param name="msgID">消息代码</param>
        </member>
        <member name="M:Cmn.Mis.SendMessage.GetRecDetail(System.Collections.Generic.Dictionary{System.String,System.String},System.String)">
            <summary>
            获取记录明细
            </summary>
            <param name="rec">记录</param>
            <returns>描述记录的字符串</returns>
        </member>
        <member name="M:Cmn.Mis.SendMessage.GetRecDiff(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.String},System.String,System.String)">
            <summary>
            取得两个记录不同的地方
            </summary>
            <param name="recOld">原先的记录</param>
            <param name="recNew">新的记录</param>
            <returns>不同的地方的描述</returns>
        </member>
        <member name="M:Cmn.Mis.SendMessage.SendNote(System.String,System.String)">
            <summary>
            发送短信
            </summary>
            <param name="cellPhone">手机号码</param>
            <param name="noteContent">短信内容</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.SendMessage.SendMail(System.Int32,System.String,System.String)">
            <summary>
            发送邮件
            </summary>
            <param name="userID">用户代码</param>
            <param name="title">邮件标题</param>
            <param name="content">邮件内容</param>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:Cmn.Mis.SendMessage.SendMail(System.String,System.String,System.String)">
            <summary>
            发送邮件
            </summary>
            <param name="userID">用户代码</param>
            <param name="title">邮件标题</param>
            <param name="content">邮件内容</param>
            <returns>是否发送成功</returns>
        </member>
        <member name="M:Cmn.Mis.SendMessage.SendAllMail">
            <summary>
            发送数据库中所有需要发送的Mail
            </summary>
        </member>
        <member name="T:Cmn.Mis.ReportPage">
            <summary>
            根据Sql文，输出内容到Excle的Page类
            </summary>
        </member>
        <member name="M:Cmn.Mis.ReportPage.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Cmn.Mis.ReportPage.OutputToExcel(System.String)">
            <summary>
            输出到Excel
            </summary>
            <param name="strSql">sql语句</param>
        </member>
        <member name="M:Cmn.Mis.ReportPage.GetTitle">
            <summary>
            取得当前界面的标题（由界面管理设置）
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cmn.Mis.RecFilter">
            <summary>
            用于筛选列表中的记录
            </summary>
        </member>
        <member name="M:Cmn.Mis.RecFilter.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Cmn.Mis.RecFilter.AddCol(System.String,System.String)">
            <summary>
            加入字段列表，用于查询
            </summary>
            <param name="colName">字段名称</param>
            <param name="colTitle">字段标题</param>
        </member>
        <member name="M:Cmn.Mis.RecFilter.Clear">
            <summary>
            清除所有的列
            </summary>
        </member>
        <member name="M:Cmn.Mis.RecFilter.GetFilterSql(System.String,System.String)">
            <summary>
            取筛选sql
            </summary>
            <param name="initSql">初始化的sql语句</param>
            <param name="curSql">当前使用的sql语句</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.RecFilter.GetFieldCondtion(System.String,System.String)">
            <summary>
            增加某个字段的筛选条件where子句
            </summary>
            <param name="initSql">初始化的sql语句</param>
            <param name="curSql">当前使用的sql语句</param>
            <param name="fieldName">字段名</param>
            <returns>某个字段的筛选条件where子句</returns>
        </member>
        <member name="E:Cmn.Mis.RecFilter.OnFilter">
            <summary>
            筛选事件
            </summary>
        </member>
        <member name="E:Cmn.Mis.RecFilter.OnCancelFilter">
            <summary>
            取消筛选事件
            </summary>
        </member>
        <member name="T:Cmn.Cls.Atom">
            <summary>
            生成Atom格式的Xml字符串 
            类似与Rss可以被新浪微博导入
            &lt;?xml version="1.0" encoding="UTF-8"?&gt;
            &lt;feed xmlns="http://www.w3.org/2005/Atom"&gt;
            .....
            &lt;/feed&gt;
            </summary>
        </member>
        <member name="F:Cmn.Cls.Atom._Sb">
            <summary>
            内部StringBuilder变量
            </summary>
        </member>
        <member name="F:Cmn.Cls.Atom._HasAddHead">
            <summary>
            是否已添加头部数据
            </summary>
        </member>
        <member name="M:Cmn.Cls.Atom.AddHead(System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime)">
            <summary>
            插入头部数据
            </summary>
            <param name="title">&lt;title type="html"&gt;&lt;![CDATA[端木传龙-数字重阵]]&gt;&lt;/title&gt;</param>
            <param name="subtitle">&lt;subtitle type="html"&gt;&lt;![CDATA[DIGITOWN]]&gt;&lt;/subtitle&gt;</param>
            <param name="id"> &lt;id&gt;http://www.duanmu.net/&lt;/id&gt;</param>
            <param name="alterLink">&lt;link rel="alternate" type="text/html" href="http://www.duanmu.net/" /></param>
            <param name="selfLink">&lt;link rel="self" type="application/atom+xml" href="http://www.duanmu.net/atom.asp" /&gt; </param>
            <param name="generator">&lt;generator uri="http://www.pjhome.net/" version="2.8"&gt;PJBlog3&lt;/generator&gt; </param>
            <param name="updated">&lt;updated&gt;2012-10-08T13:21:59+08:00&lt;/updated&gt;</param>
        </member>
        <member name="M:Cmn.Cls.Atom.AddEntry(System.String,System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.String,System.String,System.String)">
            <summary>
            插入Entry数据
            
            </summary>
            <param name="title">&lt;title type="html"&gt;&lt;![CDATA[《DigiTown》数字重阵 全新网站测试登场]]&gt;&lt;/title&gt;</param>
            <param name="authorName">
            &lt;author&gt;
                &lt;name&gt;端木传龙&lt;/name&gt;
                &lt;uri&gt;http://www.duanmu.net/&lt;/uri&gt;
                &lt;email&gt;duanmu20@126.com&lt;/email&gt;
            &lt;/author&gt;
            </param>
            <param name="authorUri">
            &lt;author&gt;
                &lt;name&gt;端木传龙&lt;/name&gt;
                &lt;uri&gt;http://www.duanmu.net/&lt;/uri&gt;
                &lt;email&gt;duanmu20@126.com&lt;/email&gt;
            &lt;/author&gt;
            </param>
            <param name="authorEmail">
            &lt;author&gt;
                &lt;name&gt;端木传龙&lt;/name&gt;
                &lt;uri&gt;http://www.duanmu.net/&lt;/uri&gt;
                &lt;email&gt;duanmu20@126.com&lt;/email&gt;
            &lt;/author&gt;
            </param>
            <param name="categoryScheme">&lt;category term="" scheme="http://www.duanmu.net/default.asp?cateID=4" label="口水圖文" /&gt; </param>
            <param name="categoryLabel">&lt;category term="" scheme="http://www.duanmu.net/default.asp?cateID=4" label="口水圖文" /&gt; </param>
            <param name="updated">&lt;updated&gt;2012-10-08T13:21:59+08:00&lt;/updated&gt;</param>
            <param name="published">&lt;published&gt;2012-10-08T13:21:59+08:00&lt;/published&gt;</param>
            <param name="summary">&lt;summary type="html"&gt;&lt;![CDATA[1。登陆”巴黎欧莱雅MAS型男解码’活动<br/>2．点击”解码自己或’解码好友”参与活动]]&gt;&lt;/summary&gt;</param>
            <param name="link">&lt;link rel="alternate" type="text/html" href="http://www.duanmu.net/article.asp?id=7612" /&gt; </param>
            <param name="id">&lt;id&gt;http://www.duanmu.net/default.asp?id=7612&lt;/id&gt;</param>
        </member>
        <member name="M:Cmn.Cls.Atom.Get">
            <summary>
            获取Atom格式的XML字符串
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cmn.FileFolder">
            <summary>
            文件目录操作类
            </summary>
        </member>
        <member name="M:Cmn.FileFolder.CreateFolder(System.String)">
            <summary>
            目录不存在时新建
            </summary>
            <param name="filePath">目录（相对路径）</param>
        </member>
        <member name="M:Cmn.FileFolder.WriteToFile(System.String,System.String)">
            <summary>
            把字符串写入文件中
            </summary>
            <param name="fileName">文件名 绝对目录</param>
            <param name="content">文件内容</param>
            <returns>是否成功</returns>
        </member>
        <member name="T:Cmn.Date">
            <summary>
            日期操作类
            </summary>
        </member>
        <member name="M:Cmn.Date.GetTimeSpan(System.DateTime,System.DateTime)">
            <summary>
            求时间差
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>TimeSpan</returns>
        </member>
        <member name="M:Cmn.Date.GetTimeSpan(System.Int64,System.Int64)">
            <summary>
            求时间差
            </summary>
            <param name="startTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns>时间差</returns>
        </member>
        <member name="M:Cmn.Date.ToMonthDayStr(System.DateTime)">
            <summary>
            转称为月-日:09-12
            </summary>
            <param name="d">日期</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Date.ToDateStr(System.DateTime)">
            <summary>
            转换为年月日:2006-09-12
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Date.ToTimeStr(System.DateTime)">
            <summary>
            转换为:小时:分:秒 00:29:58
            </summary>
            <param name="t"></param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Date.ToDateTimeStr(System.DateTime)">
            <summary>
            转换为长时间:2006-09-12 00:30:57
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="T:Cmn.Mis.SqlAnalyse">
            <summary>
            sql语句的分析类
            </summary>
        </member>
        <member name="M:Cmn.Mis.SqlAnalyse.GetMainTableName(System.String)">
            <summary>
            从SQL语句取出表名
            </summary>
            <param name="sql">sql语句</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.SqlAnalyse.GetKeyField(System.String)">
            <summary>
            取主键
            </summary>
            <param name="sql">sql语句</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.SqlAnalyse.AddWhere(System.String,System.String)">
            <summary>
            在sql语句中加入where条件
            </summary>
            <param name="sql">sql语句</param>
            <param name="where">要添加的where条件</param>
            <returns>添加了where条件的sql语句</returns>
        </member>
        <member name="M:Cmn.Mis.SqlAnalyse.AddSortField(System.String,System.String)">
            <summary>
            添加排序字段
            </summary>
            <param name="sql">sql语句</param>
            <param name="fieldName">字段名</param>
            <returns>添加了排序字段的sql语句</returns>
        </member>
        <member name="M:Cmn.Mis.SqlAnalyse.GetFullFieldName(System.String,System.String)">
            <summary>
            取sql语句中的字段全名
            </summary>
            <param name="sql">sql语句</param>
            <param name="fieldName">字段名</param>
            <returns>字段全名</returns>
        </member>
        <member name="M:Cmn.Mis.SqlAnalyse.GetFullSortFieldName(System.String,System.String)">
            <summary>
            取sql语句中的排序字段全名
            </summary>
            <param name="sql">sql语句</param>
            <param name="fieldName">字段名</param>
            <returns>排序字段全名</returns>
        </member>
        <member name="M:Cmn.Mis.SqlAnalyse.GetRecCount(System.String)">
            <summary>
            根据sql语句取记录数
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.SqlAnalyse.AddTopToSelect(System.String)">
            <summary>
            在select语句中增加top 500限制记录条数
            </summary>
            <param name="sql">select语句</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.SqlAnalyse.AddSelectField(System.String,System.String)">
            <summary>
            增加select字段
            </summary>
            <param name="sql">原先的Sql</param>
            <param name="field">字段内容</param>
            <returns>加好字段的Sql</returns>
        </member>
        <member name="M:Cmn.Mis.SqlAnalyse.WipeSubSelect(System.String,System.Collections.ArrayList@)">
            <summary>
            清除sql中的子查询
            </summary>
            <param name="sql">sql语句</param>
            <param name="selectLst">子查询列表</param>
            <returns>清除了子查询的sql语句</returns>
        </member>
        <member name="M:Cmn.Mis.SqlAnalyse.RecoverSubSelect(System.String,System.Collections.ArrayList)">
            <summary>
            恢复sql中的子查询
            </summary>
            <param name="sql">sql语句</param>
            <param name="selectLst">子查询列表</param>
            <returns>恢复了子查询的sql语句</returns>
        </member>
        <member name="M:Cmn.Mis.SqlAnalyse.WipeBracket(System.String,System.Collections.ArrayList@)">
            <summary>
            清除sql中的括号
            </summary>
            <param name="sql">sql语句</param>
            <param name="bracketLst">括号列表</param>
            <returns>清除了括号的sql语句</returns>
        </member>
        <member name="M:Cmn.Mis.SqlAnalyse.RecoverBracket(System.String,System.Collections.ArrayList)">
            <summary>
            恢复sql中的括号
            </summary>
            <param name="sql">sql语句</param>
            <param name="bracketLst">括号列表</param>
            <returns>恢复了括号的sql语句</returns>
        </member>
        <member name="M:Cmn.Mis.SqlAnalyse.GetRecCountSql(System.String)">
            <summary>
            根据sql语句取记录数
            </summary>
            <param name="sql">sql语句</param>
            <returns>select字段替换成count(*)的sql语句</returns>
        </member>
        <member name="M:Cmn.Mis.SqlAnalyse.GetWithSql(System.String)">
            <summary>
            获取With语句
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Mis.SqlAnalyse.GetSelectFields(System.String)">
            <summary>
            取得Select的所有字段（和原语句中一样，就是截取select到from之间的内容）
            </summary>
            <param name="sql">sql语句</param>
            <returns>select出来的字段</returns>
        </member>
        <member name="M:Cmn.Mis.SqlAnalyse.GetSelectFieldList(System.String)">
            <summary>
            获取Select语句中，select字段的列表
            </summary>
            <param name="sql">sql语句</param>
            <returns>select字段的列表（如果有化名，取得的是化名）</returns>
        </member>
        <member name="M:Cmn.Mis.SqlAnalyse.RemoveWhere(System.String)">
            <summary>
            删除where子句
            </summary>
            <param name="sql">sql语句</param>
            <returns>删除了where子句的Sql语句</returns>
        </member>
        <member name="T:Cmn.Mis.MyGrid">
             <summary>
            表格类 
             </summary>
        </member>
        <member name="M:Cmn.Mis.MyGrid.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Cmn.Report.OutputToExcel(System.String,System.String)">
            <summary>
            输出到Excel
            </summary>
            <param name="strSql">sql 语句</param>
            <param name="excelFileName">Excel模板文件</param>
            <returns>生成的Excel文件名</returns>
        </member>
        <member name="M:Cmn.Report.OutputToExcel(System.Web.UI.Page,System.String,System.String)">
            <summary>
            输出到Excel,并Response到页面
            </summary>
            <param name="curPage">当前页面</param>
            <param name="strSql">sql语句</param>
            <param name="excelFileName">Excel模板文件</param>
        </member>
        <member name="M:Cmn.Report.ExcelToHtml(System.String,System.String)">
            <summary>
            Excel转换成Html文件
            </summary>
            <param name="xlsPath">Excel文件包括路径</param>
            <param name="htmlPath">Html文件路径</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Cmn.Report.ExcelToHtml(System.String)">
            <summary>
            Excel转换成Html
            </summary>
            <param name="xlsPath">Excel文件名包括路径</param>
            <returns>成功返回html的文件名，如果失败返回空</returns>
        </member>
        <member name="M:Cmn.Report.MergeHtml(System.String[])">
            <summary>
            把多个Html合并成一个Html
            </summary>
            <param name="htmlFileNames">Html文件名列表</param>
            <returns>返回拼接成的Html</returns>
        </member>
        <member name="M:Cmn.Report.MergeHtml(System.Int32,System.String[])">
            <summary>
            把多个Html合并成一个Html
            </summary>
            <param name="htmlFileNames">Html文件名列表</param>
            <param name="pageHeight">页面高度（像素）</param>
            <returns>返回拼接成的Html</returns>
        </member>
        <member name="M:Cmn.Cls.Rss.Get">
            <summary>
            返回RSS格式的字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cmn.Cls.Rss.SetElment(System.String,System.String)">
            <summary>
            设置某个元素 例如 title
            </summary>
            <param name="elmentName"></param>
            <param name="str"></param>
        </member>
        <member name="M:Cmn.Cls.Rss.SetElment(System.String,System.String,System.Boolean)">
            <summary>
            设置某个元素 例如 title
            </summary>
            <param name="elmentName"></param>
            <param name="str"></param>
            <param name="isCData"></param>
        </member>
        <member name="M:Cmn.Cls.Rss.SetStartTag(System.String)">
            <summary>
            设置标签开始符号
            </summary>
            <param name="parentElementName"></param>
        </member>
        <member name="M:Cmn.Cls.Rss.SetEndTag(System.String)">
            <summary>
            设置标签结束符号
            </summary>
            <param name="parentElementName"></param>
        </member>
        <member name="M:Cmn.Cls.Rss.GetCData(System.String)">
            <summary>
            字符串前后加 <![CDATA[ 和  ]]>
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Cmn.Cls.Rss.RssImage">
            <summary>
            Rss使用Image节点
            </summary>
        </member>
        <member name="T:Cmn.Cls.Rss.RssItem">
            <summary>
            Rss使用的Item节点(该节点有多个)
            </summary>
        </member>
        <member name="T:Cmn.Session">
            <summary>
            Session操作类
            </summary>
        </member>
        <member name="M:Cmn.Session.Set(System.String,System.String)">
            <summary>
            设置Session值
            </summary>
            <param name="infoName">Session名称</param>
            <param name="infoValue">Session名称对应的值</param>
        </member>
        <member name="M:Cmn.Session.Get(System.String)">
            <summary>
            取Session值
            </summary>
            <param name="infoName">Session名称</param>
            <returns>Session名称对应的值</returns>
        </member>
        <member name="M:Cmn.Session.Clear">
            <summary>
            清除所有的Session
            </summary>
        </member>
        <member name="M:Cmn.Session.SetUserID(System.String)">
            <summary>
            设置用户代码
            </summary>
            <param name="userID">用户代码</param>
        </member>
        <member name="M:Cmn.Session.GetUserID">
            <summary>
            取得用户代码
            </summary>
            <returns>用户代码</returns>
        </member>
        <member name="M:Cmn.Session.ExistsSession">
            <summary>
            是否存在Session
            </summary>
            <returns>是否存在Session</returns>
        </member>
        <member name="T:Cmn.Net">
            <summary>
            网络操作类
            </summary>
        </member>
        <member name="M:Cmn.Net.DownFile(System.String)">
            <summary>
            下载文件
            </summary>
            <param name="fileFile">文件路径（绝对路径）</param>
            <returns >返回文件是否存在，存在下载成功</returns>
        </member>
        <member name="M:Cmn.Net.GetRemoteHtmlCode(System.String)">
            <summary>
            获取远程文件源代码 GetRemoteHtmlCode(@"http://www.baidu.com");
            </summary>
            <param name="url">远程url</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Net.GetRemoteHtmlCode(System.String,System.String)">
            <summary>
            获取远程文件源代码 GetRemoteHtmlCode(@"http://www.baidu.com");
            </summary>
            <param name="url">远程url</param>
            <param name="encoding">编码（例如：utf-8;gb2312等）</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Net.RemoteSave(System.String,System.String)">
            <summary>
            保存远程文件 o.RemoteSave(@"http://www.baidu.com/img/logo.gif",Server.MapPath("Html/"));
            </summary>
            <param name="url">远程url</param>
            <param name="Path">保存到的路径</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Net.RemoteSave(System.String,System.String,System.String)">
            <summary>
            保存远程文件 o.RemoteSave(@"http://www.baidu.com/img/logo.gif",Server.MapPath("Html/"));
            </summary>
            <param name="url">远程url</param>
            <param name="Path">保存到的路径</param>
            <param name="fileName">文件名</param>
            <returns></returns>
        </member>
        <member name="T:Cmn.UrlRewrite">
            <summary>
            Url重写(伪静态)
            </summary>
        </member>
        <member name="M:Cmn.UrlRewrite.GetRewriteUrl(System.String)">
            <summary>
            获取重写过的Url
            </summary>
            <param name="factUrl">真实的Url（也可以使包含若干个href的字符串）</param>
            <returns>重写后的Url</returns>       
        </member>
        <member name="M:Cmn.UrlRewrite.ReloadRewriterRule">
            <summary>
            重新载入Url重写规则
            </summary>
            <returns>是否成功</returns>
        </member>
        <member name="M:Cmn.UrlRewrite.GetSingleRewriteUrl(System.String)">
            <summary>
            获取一个单独的Url对应的重写后的Url
            </summary>
            <param name="factUrl">真实的Url</param>
            <returns>重写后的Url</returns>
        </member>
        <member name="M:Cmn.UrlRewrite.LoadRewriterRule">
            <summary>
            读入网站Rewriter规则
            </summary>
            <returns>是否成功</returns>
        </member>
        <member name="M:Cmn.UrlRewrite.GetFactUrl(System.String)">
            <summary>
            根据重写后Url获得真实的Url
            </summary>
            <param name="rewriteUrl">重写后的Url</param>
            <returns>真实的Url</returns>
        </member>
        <member name="M:Cmn.UrlRewrite.CreateHtm(System.String)">
            <summary>
            根据重写后的Url生成静态页面
            </summary>
            <param name="rewriteUrl">重写后的Url</param>
            <returns>生成静态页面是否成功</returns>
        </member>
        <member name="M:Cmn.UrlRewrite.CreateHtm(System.String,System.Int32)">
            <summary>
            根据重写后的Url生成静态页面
            </summary>
            <param name="rewriteUrl">重写后的Url</param>
            <param name="intervalSeconds">生成页面的间隔时间(如果请求该函数的时候小于间隔时间就不生成了)</param>
            <returns>是否生成成功</returns>
        </member>
        <member name="M:Cmn.Upload.UploadImg(System.Web.UI.WebControls.FileUpload,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            上传保存图片
            </summary>
            <param name="fileUpload">FileUpload对象</param>
            <param name="path">保存图片的路径</param>
            <param name="maxWidth">最大的宽度</param>
            <param name="maxHeight">最大的高度</param>
            <param name="maxSize">文件最大的大小（单位K）</param>
            <returns>保存好的缩略图文件名</returns>
        </member>
        <member name="M:Cmn.Upload.UploadImg(System.Web.UI.WebControls.FileUpload,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            上传保存图片
            </summary>
            <param name="fileUpload">FileUpload对象</param>
            <param name="path">保存图片的路径</param>
            <param name="maxWidth">最大的宽度</param>
            <param name="maxHeight">最大的高度</param>
            <param name="maxSize">文件最大的大小（单位K）</param>
            <param name="isSaveOriginal">是否保存原图（如果是程序会自动加“_o”保存原图）</param>
            <param name="imgAllowExd">允许的图片文件名的后缀</param>
            <returns>保存好的缩略图文件名</returns>
        </member>
        <member name="M:Cmn.Upload.UploadImg(System.Web.UI.WebControls.FileUpload,System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            上传保存图片
            </summary>
            <param name="fileUpload">FileUpload对象</param>
            <param name="path">保存图片的路径</param>
            <param name="maxWidth">最大的宽度</param>
            <param name="maxHeight">最大的高度</param>
            <param name="maxSize">文件最大的大小（单位K）</param>
            <param name="isSaveOriginal">是否保存原图（如果是程序会自动加“_o”保存原图）</param>
            <returns>保存好的缩略图文件名</returns>
        </member>
        <member name="M:Cmn.Upload.ReduceImage(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            生成缩略图上
            </summary>
            <param name="img">要生成缩略图对象</param>
            <param name="maxWidth">要生成缩略图宽</param>
            <param name="maxHeight">要生成缩略图高</param>        
            <returns></returns>
        </member>
        <member name="M:Cmn.Upload.ReduceImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            生成缩略图上
            </summary>
            <param name="img">要生成缩略图对象</param>
            <param name="maxWidth">要生成缩略图宽</param>
            <param name="maxHeight">要生成缩略图高</param>
            <param name="bgColor">背景填充色</param>
            <returns></returns>
        </member>
        <member name="M:Cmn.Upload.IsTransparent(System.Drawing.Image)">
            <summary>
            判断某个图片是否是透明的
            </summary>
            <param name="img">图片</param>
            <returns>是否是透明的</returns>
        </member>
        <member name="F:Cmn.Cls.ExtendExcel._ExcelPath">
            <summary>
            Excel文件存放路径
            </summary>
        </member>
        <member name="F:Cmn.Cls.ExtendExcel._TempPath">
            <summary>
            临时文件存放路径
            </summary>
        </member>
        <member name="F:Cmn.Cls.ExtendExcel._Filename">
            <summary>
            文件名（无路径，无扩展名）
            </summary>
        </member>
        <member name="F:Cmn.Cls.ExtendExcel._Xmlfilename">
            <summary>
            XML文件名（包括路径）
            </summary>
        </member>
        <member name="F:Cmn.Cls.ExtendExcel._Xlsfilename">
            <summary>
            XLS文件名（包括路径）
            </summary>
        </member>
        <member name="F:Cmn.Cls.ExtendExcel._Sql">
            <summary>
            SQL文
            </summary>
        </member>
        <member name="F:Cmn.Cls.ExtendExcel._FirstRow">
            <summary>
            明细部起始行
            </summary>
        </member>
        <member name="F:Cmn.Cls.ExtendExcel._Default">
            <summary>
            判断有没有XML定义文件和EXCEL模板文件
            </summary>
        </member>
        <member name="M:Cmn.Cls.ExtendExcel.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Cmn.Cls.ExtendExcel.MakeExcelFile">
            <summary>
            生成EXCEL文件
            </summary>
            <returns>生成的临时EXCEL文件名</returns>
        </member>
        <member name="M:Cmn.Cls.ExtendExcel.ReadDefineXml">
            <summary>
            读取定义文件
            </summary>
        </member>
        <member name="M:Cmn.Cls.ExtendExcel.SqlToExcelWithFormat">
            <summary>
            把读取的数据写入EXCEL文件里
            </summary>
            <returns>临时EXCEL文件名</returns>
        </member>
        <member name="M:Cmn.Cls.ExtendExcel.SqlToExcelWithOutFormat">
            <summary>
            把读取的数据写入EXCEL文件里
            </summary>
            <returns>临时EXCEL文件名</returns>
        </member>
        <member name="M:Cmn.Cls.ExtendExcel.CreateDefineXml(System.String)">
            <summary>
            创建Excel对应的Xml定义文件
            </summary>
            <param name="excelFileName">Excel文件名带路径</param>
            <returns>是否成功</returns>
        </member>
        <member name="M:Cmn.Cls.ExtendExcel._WriteToXML(System.Array,System.String)">
            <summary>
            生成Excel的定义文件
            </summary>
            <param name="_ar"></param>
            <param name="_filepath">Xml的路径（包括文件名）</param>
        </member>
        <member name="T:Cmn.Cls.ExtendExcel.HeadInfo">
            <summary>
            头部单元格信息
            </summary>
        </member>
        <member name="T:Cmn.Cls.ExtendExcel.BodyInfo">
            <summary>
            明细部单元格信息
            </summary>
        </member>
        <member name="T:Cmn.Cls.ExtendExcel.FormulaInfo">
            <summary>
            明细部单元格Formula信息 20100717 增加
            </summary>
        </member>
    </members>
</doc>
